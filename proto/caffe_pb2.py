# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: caffe2onnx/proto/caffe.proto
"""Generated protocol buffer code."""
from google.protobuf import (
    descriptor as _descriptor,
    descriptor_pool as _descriptor_pool,
    message as _message,
    reflection as _reflection,
    symbol_database as _symbol_database,
)
from google.protobuf.internal import enum_type_wrapper

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x1c\x63\x61\x66\x66\x65\x32onnx/proto/caffe.proto\x12\x05\x63\x61\x66\x66\x65"\x1c\n\tBlobShape\x12\x0f\n\x03\x64im\x18\x01 \x03(\x03\x42\x02\x10\x01"\xcc\x01\n\tBlobProto\x12\x1f\n\x05shape\x18\x07 \x01(\x0b\x32\x10.caffe.BlobShape\x12\x10\n\x04\x64\x61ta\x18\x05 \x03(\x02\x42\x02\x10\x01\x12\x10\n\x04\x64iff\x18\x06 \x03(\x02\x42\x02\x10\x01\x12\x17\n\x0b\x64ouble_data\x18\x08 \x03(\x01\x42\x02\x10\x01\x12\x17\n\x0b\x64ouble_diff\x18\t \x03(\x01\x42\x02\x10\x01\x12\x0e\n\x03num\x18\x01 \x01(\x05:\x01\x30\x12\x13\n\x08\x63hannels\x18\x02 \x01(\x05:\x01\x30\x12\x11\n\x06height\x18\x03 \x01(\x05:\x01\x30\x12\x10\n\x05width\x18\x04 \x01(\x05:\x01\x30"2\n\x0f\x42lobProtoVector\x12\x1f\n\x05\x62lobs\x18\x01 \x03(\x0b\x32\x10.caffe.BlobProto"\x81\x01\n\x05\x44\x61tum\x12\x10\n\x08\x63hannels\x18\x01 \x01(\x05\x12\x0e\n\x06height\x18\x02 \x01(\x05\x12\r\n\x05width\x18\x03 \x01(\x05\x12\x0c\n\x04\x64\x61ta\x18\x04 \x01(\x0c\x12\r\n\x05label\x18\x05 \x01(\x05\x12\x12\n\nfloat_data\x18\x06 \x03(\x02\x12\x16\n\x07\x65ncoded\x18\x07 \x01(\x08:\x05\x66\x61lse"A\n\x0cLabelMapItem\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05label\x18\x02 \x01(\x05\x12\x14\n\x0c\x64isplay_name\x18\x03 \x01(\t"-\n\x08LabelMap\x12!\n\x04item\x18\x01 \x03(\x0b\x32\x13.caffe.LabelMapItem"o\n\x07Sampler\x12\x14\n\tmin_scale\x18\x01 \x01(\x02:\x01\x31\x12\x14\n\tmax_scale\x18\x02 \x01(\x02:\x01\x31\x12\x1b\n\x10min_aspect_ratio\x18\x03 \x01(\x02:\x01\x31\x12\x1b\n\x10max_aspect_ratio\x18\x04 \x01(\x02:\x01\x31"\xc0\x01\n\x10SampleConstraint\x12\x1b\n\x13min_jaccard_overlap\x18\x01 \x01(\x02\x12\x1b\n\x13max_jaccard_overlap\x18\x02 \x01(\x02\x12\x1b\n\x13min_sample_coverage\x18\x03 \x01(\x02\x12\x1b\n\x13max_sample_coverage\x18\x04 \x01(\x02\x12\x1b\n\x13min_object_coverage\x18\x05 \x01(\x02\x12\x1b\n\x13max_object_coverage\x18\x06 \x01(\x02"\xb2\x01\n\x0c\x42\x61tchSampler\x12 \n\x12use_original_image\x18\x01 \x01(\x08:\x04true\x12\x1f\n\x07sampler\x18\x02 \x01(\x0b\x32\x0e.caffe.Sampler\x12\x32\n\x11sample_constraint\x18\x03 \x01(\x0b\x32\x17.caffe.SampleConstraint\x12\x12\n\nmax_sample\x18\x04 \x01(\r\x12\x17\n\nmax_trials\x18\x05 \x01(\r:\x03\x31\x30\x30"\x8a\x01\n\x0e\x45mitConstraint\x12\x39\n\temit_type\x18\x01 \x01(\x0e\x32\x1e.caffe.EmitConstraint.EmitType:\x06\x43\x45NTER\x12\x14\n\x0c\x65mit_overlap\x18\x02 \x01(\x02"\'\n\x08\x45mitType\x12\n\n\x06\x43\x45NTER\x10\x00\x12\x0f\n\x0bMIN_OVERLAP\x10\x01"\x87\x01\n\x0eNormalizedBBox\x12\x0c\n\x04xmin\x18\x01 \x01(\x02\x12\x0c\n\x04ymin\x18\x02 \x01(\x02\x12\x0c\n\x04xmax\x18\x03 \x01(\x02\x12\x0c\n\x04ymax\x18\x04 \x01(\x02\x12\r\n\x05label\x18\x05 \x01(\x05\x12\x11\n\tdifficult\x18\x06 \x01(\x08\x12\r\n\x05score\x18\x07 \x01(\x02\x12\x0c\n\x04size\x18\x08 \x01(\x02"I\n\nAnnotation\x12\x16\n\x0binstance_id\x18\x01 \x01(\x05:\x01\x30\x12#\n\x04\x62\x62ox\x18\x02 \x01(\x0b\x32\x15.caffe.NormalizedBBox"M\n\x0f\x41nnotationGroup\x12\x13\n\x0bgroup_label\x18\x01 \x01(\x05\x12%\n\nannotation\x18\x02 \x03(\x0b\x32\x11.caffe.Annotation"\xaf\x01\n\x0e\x41nnotatedDatum\x12\x1b\n\x05\x64\x61tum\x18\x01 \x01(\x0b\x32\x0c.caffe.Datum\x12\x32\n\x04type\x18\x02 \x01(\x0e\x32$.caffe.AnnotatedDatum.AnnotationType\x12\x30\n\x10\x61nnotation_group\x18\x03 \x03(\x0b\x32\x16.caffe.AnnotationGroup"\x1a\n\x0e\x41nnotationType\x12\x08\n\x04\x42\x42OX\x10\x00"\x8a\x02\n\x0f\x46illerParameter\x12\x16\n\x04type\x18\x01 \x01(\t:\x08\x63onstant\x12\x10\n\x05value\x18\x02 \x01(\x02:\x01\x30\x12\x0e\n\x03min\x18\x03 \x01(\x02:\x01\x30\x12\x0e\n\x03max\x18\x04 \x01(\x02:\x01\x31\x12\x0f\n\x04mean\x18\x05 \x01(\x02:\x01\x30\x12\x0e\n\x03std\x18\x06 \x01(\x02:\x01\x31\x12\x12\n\x06sparse\x18\x07 \x01(\x05:\x02-1\x12\x42\n\rvariance_norm\x18\x08 \x01(\x0e\x32#.caffe.FillerParameter.VarianceNorm:\x06\x46\x41N_IN"4\n\x0cVarianceNorm\x12\n\n\x06\x46\x41N_IN\x10\x00\x12\x0b\n\x07\x46\x41N_OUT\x10\x01\x12\x0b\n\x07\x41VERAGE\x10\x02"\x8e\x02\n\x0cNetParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05input\x18\x03 \x03(\t\x12%\n\x0binput_shape\x18\x08 \x03(\x0b\x32\x10.caffe.BlobShape\x12\x11\n\tinput_dim\x18\x04 \x03(\x05\x12\x1d\n\x0e\x66orce_backward\x18\x05 \x01(\x08:\x05\x66\x61lse\x12\x1e\n\x05state\x18\x06 \x01(\x0b\x32\x0f.caffe.NetState\x12\x19\n\ndebug_info\x18\x07 \x01(\x08:\x05\x66\x61lse\x12$\n\x05layer\x18\x64 \x03(\x0b\x32\x15.caffe.LayerParameter\x12\'\n\x06layers\x18\x02 \x03(\x0b\x32\x17.caffe.V1LayerParameter"\xa2\x0b\n\x0fSolverParameter\x12\x0b\n\x03net\x18\x18 \x01(\t\x12&\n\tnet_param\x18\x19 \x01(\x0b\x32\x13.caffe.NetParameter\x12\x11\n\ttrain_net\x18\x01 \x01(\t\x12\x10\n\x08test_net\x18\x02 \x03(\t\x12,\n\x0ftrain_net_param\x18\x15 \x01(\x0b\x32\x13.caffe.NetParameter\x12+\n\x0etest_net_param\x18\x16 \x03(\x0b\x32\x13.caffe.NetParameter\x12$\n\x0btrain_state\x18\x1a \x01(\x0b\x32\x0f.caffe.NetState\x12#\n\ntest_state\x18\x1b \x03(\x0b\x32\x0f.caffe.NetState\x12!\n\teval_type\x18) \x01(\t:\x0e\x63lassification\x12\x1c\n\nap_version\x18* \x01(\t:\x08Integral\x12$\n\x15show_per_class_result\x18, \x01(\x08:\x05\x66\x61lse\x12\x11\n\ttest_iter\x18\x03 \x03(\x05\x12\x18\n\rtest_interval\x18\x04 \x01(\x05:\x01\x30\x12 \n\x11test_compute_loss\x18\x13 \x01(\x08:\x05\x66\x61lse\x12!\n\x13test_initialization\x18  \x01(\x08:\x04true\x12\x0f\n\x07\x62\x61se_lr\x18\x05 \x01(\x02\x12\x0f\n\x07\x64isplay\x18\x06 \x01(\x05\x12\x17\n\x0c\x61verage_loss\x18! \x01(\x05:\x01\x31\x12\x10\n\x08max_iter\x18\x07 \x01(\x05\x12\x14\n\titer_size\x18$ \x01(\x05:\x01\x31\x12\x11\n\tlr_policy\x18\x08 \x01(\t\x12\r\n\x05gamma\x18\t \x01(\x02\x12\r\n\x05power\x18\n \x01(\x02\x12\x10\n\x08momentum\x18\x0b \x01(\x02\x12\x14\n\x0cweight_decay\x18\x0c \x01(\x02\x12\x1f\n\x13regularization_type\x18\x1d \x01(\t:\x02L2\x12\x10\n\x08stepsize\x18\r \x01(\x05\x12\x11\n\tstepvalue\x18" \x03(\x05\x12\x17\n\x0fplateau_winsize\x18+ \x03(\x05\x12\x1a\n\x0e\x63lip_gradients\x18# \x01(\x02:\x02-1\x12\x13\n\x08snapshot\x18\x0e \x01(\x05:\x01\x30\x12\x17\n\x0fsnapshot_prefix\x18\x0f \x01(\t\x12\x1c\n\rsnapshot_diff\x18\x10 \x01(\x08:\x05\x66\x61lse\x12K\n\x0fsnapshot_format\x18% \x01(\x0e\x32%.caffe.SolverParameter.SnapshotFormat:\x0b\x42INARYPROTO\x12;\n\x0bsolver_mode\x18\x11 \x01(\x0e\x32!.caffe.SolverParameter.SolverMode:\x03GPU\x12\x14\n\tdevice_id\x18\x12 \x01(\x05:\x01\x30\x12\x17\n\x0brandom_seed\x18\x14 \x01(\x03:\x02-1\x12\x11\n\x04type\x18( \x01(\t:\x03SGD\x12\x14\n\x05\x64\x65lta\x18\x1f \x01(\x02:\x05\x31\x65-08\x12\x18\n\tmomentum2\x18\' \x01(\x02:\x05\x30.999\x12\x17\n\trms_decay\x18& \x01(\x02:\x04\x30.99\x12\x19\n\ndebug_info\x18\x17 \x01(\x08:\x05\x66\x61lse\x12"\n\x14snapshot_after_train\x18\x1c \x01(\x08:\x04true\x12;\n\x0bsolver_type\x18\x1e \x01(\x0e\x32!.caffe.SolverParameter.SolverType:\x03SGD"+\n\x0eSnapshotFormat\x12\x08\n\x04HDF5\x10\x00\x12\x0f\n\x0b\x42INARYPROTO\x10\x01"\x1e\n\nSolverMode\x12\x07\n\x03\x43PU\x10\x00\x12\x07\n\x03GPU\x10\x01"U\n\nSolverType\x12\x07\n\x03SGD\x10\x00\x12\x0c\n\x08NESTEROV\x10\x01\x12\x0b\n\x07\x41\x44\x41GRAD\x10\x02\x12\x0b\n\x07RMSPROP\x10\x03\x12\x0c\n\x08\x41\x44\x41\x44\x45LTA\x10\x04\x12\x08\n\x04\x41\x44\x41M\x10\x05"\xa5\x01\n\x0bSolverState\x12\x0c\n\x04iter\x18\x01 \x01(\x05\x12\x13\n\x0blearned_net\x18\x02 \x01(\t\x12!\n\x07history\x18\x03 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x17\n\x0c\x63urrent_step\x18\x04 \x01(\x05:\x01\x30\x12\x1b\n\x0cminimum_loss\x18\x05 \x01(\x02:\x05\x31\x65+38\x12\x1a\n\x0fiter_last_event\x18\x06 \x01(\x05:\x01\x30"N\n\x08NetState\x12!\n\x05phase\x18\x01 \x01(\x0e\x32\x0c.caffe.Phase:\x04TEST\x12\x10\n\x05level\x18\x02 \x01(\x05:\x01\x30\x12\r\n\x05stage\x18\x03 \x03(\t"s\n\x0cNetStateRule\x12\x1b\n\x05phase\x18\x01 \x01(\x0e\x32\x0c.caffe.Phase\x12\x11\n\tmin_level\x18\x02 \x01(\x05\x12\x11\n\tmax_level\x18\x03 \x01(\x05\x12\r\n\x05stage\x18\x04 \x03(\t\x12\x11\n\tnot_stage\x18\x05 \x03(\t"\xa3\x01\n\tParamSpec\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x31\n\nshare_mode\x18\x02 \x01(\x0e\x32\x1d.caffe.ParamSpec.DimCheckMode\x12\x12\n\x07lr_mult\x18\x03 \x01(\x02:\x01\x31\x12\x15\n\ndecay_mult\x18\x04 \x01(\x02:\x01\x31"*\n\x0c\x44imCheckMode\x12\n\n\x06STRICT\x10\x00\x12\x0e\n\nPERMISSIVE\x10\x01"\xae\x1f\n\x0eLayerParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x0e\n\x06\x62ottom\x18\x03 \x03(\t\x12\x0b\n\x03top\x18\x04 \x03(\t\x12\x1b\n\x05phase\x18\n \x01(\x0e\x32\x0c.caffe.Phase\x12\x13\n\x0bloss_weight\x18\x05 \x03(\x02\x12\x1f\n\x05param\x18\x06 \x03(\x0b\x32\x10.caffe.ParamSpec\x12\x1f\n\x05\x62lobs\x18\x07 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x16\n\x0epropagate_down\x18\x0b \x03(\x08\x12$\n\x07include\x18\x08 \x03(\x0b\x32\x13.caffe.NetStateRule\x12$\n\x07\x65xclude\x18\t \x03(\x0b\x32\x13.caffe.NetStateRule\x12\x37\n\x0ftransform_param\x18\x64 \x01(\x0b\x32\x1e.caffe.TransformationParameter\x12(\n\nloss_param\x18\x65 \x01(\x0b\x32\x14.caffe.LossParameter\x12\x30\n\x0e\x61\x63\x63uracy_param\x18\x66 \x01(\x0b\x32\x18.caffe.AccuracyParameter\x12<\n\x14\x61nnotated_data_param\x18\xc8\x01 \x01(\x0b\x32\x1d.caffe.AnnotatedDataParameter\x12,\n\x0c\x61rgmax_param\x18g \x01(\x0b\x32\x16.caffe.ArgMaxParameter\x12\x34\n\x10\x62\x61tch_norm_param\x18\x8b\x01 \x01(\x0b\x32\x19.caffe.BatchNormParameter\x12)\n\nbias_param\x18\x8d\x01 \x01(\x0b\x32\x14.caffe.BiasParameter\x12)\n\nclip_param\x18\x94\x01 \x01(\x0b\x32\x14.caffe.ClipParameter\x12,\n\x0c\x63oncat_param\x18h \x01(\x0b\x32\x16.caffe.ConcatParameter\x12?\n\x16\x63ontrastive_loss_param\x18i \x01(\x0b\x32\x1f.caffe.ContrastiveLossParameter\x12\x36\n\x11\x63onvolution_param\x18j \x01(\x0b\x32\x1b.caffe.ConvolutionParameter\x12)\n\ncrop_param\x18\x90\x01 \x01(\x0b\x32\x14.caffe.CropParameter\x12(\n\ndata_param\x18k \x01(\x0b\x32\x14.caffe.DataParameter\x12\x44\n\x18\x64\x65tection_evaluate_param\x18\xcd\x01 \x01(\x0b\x32!.caffe.DetectionEvaluateParameter\x12@\n\x16\x64\x65tection_output_param\x18\xcc\x01 \x01(\x0b\x32\x1f.caffe.DetectionOutputParameter\x12.\n\rdropout_param\x18l \x01(\x0b\x32\x17.caffe.DropoutParameter\x12\x33\n\x10\x64ummy_data_param\x18m \x01(\x0b\x32\x19.caffe.DummyDataParameter\x12.\n\reltwise_param\x18n \x01(\x0b\x32\x17.caffe.EltwiseParameter\x12\'\n\telu_param\x18\x8c\x01 \x01(\x0b\x32\x13.caffe.ELUParameter\x12+\n\x0b\x65mbed_param\x18\x89\x01 \x01(\x0b\x32\x15.caffe.EmbedParameter\x12&\n\texp_param\x18o \x01(\x0b\x32\x13.caffe.ExpParameter\x12/\n\rflatten_param\x18\x87\x01 \x01(\x0b\x32\x17.caffe.FlattenParameter\x12\x31\n\x0fhdf5_data_param\x18p \x01(\x0b\x32\x18.caffe.HDF5DataParameter\x12\x35\n\x11hdf5_output_param\x18q \x01(\x0b\x32\x1a.caffe.HDF5OutputParameter\x12\x33\n\x10hinge_loss_param\x18r \x01(\x0b\x32\x19.caffe.HingeLossParameter\x12\x33\n\x10image_data_param\x18s \x01(\x0b\x32\x19.caffe.ImageDataParameter\x12\x39\n\x13infogain_loss_param\x18t \x01(\x0b\x32\x1c.caffe.InfogainLossParameter\x12\x39\n\x13inner_product_param\x18u \x01(\x0b\x32\x1c.caffe.InnerProductParameter\x12+\n\x0binput_param\x18\x8f\x01 \x01(\x0b\x32\x15.caffe.InputParameter\x12\'\n\tlog_param\x18\x86\x01 \x01(\x0b\x32\x13.caffe.LogParameter\x12&\n\tlrn_param\x18v \x01(\x0b\x32\x13.caffe.LRNParameter\x12\x35\n\x11memory_data_param\x18w \x01(\x0b\x32\x1a.caffe.MemoryDataParameter\x12:\n\x13multibox_loss_param\x18\xc9\x01 \x01(\x0b\x32\x1c.caffe.MultiBoxLossParameter\x12&\n\tmvn_param\x18x \x01(\x0b\x32\x13.caffe.MVNParameter\x12.\n\nnorm_param\x18\xce\x01 \x01(\x0b\x32\x19.caffe.NormalizeParameter\x12\x33\n\x0fparameter_param\x18\x91\x01 \x01(\x0b\x32\x19.caffe.ParameterParameter\x12/\n\rpermute_param\x18\xca\x01 \x01(\x0b\x32\x17.caffe.PermuteParameter\x12.\n\rpooling_param\x18y \x01(\x0b\x32\x17.caffe.PoolingParameter\x12*\n\x0bpower_param\x18z \x01(\x0b\x32\x15.caffe.PowerParameter\x12+\n\x0bprelu_param\x18\x83\x01 \x01(\x0b\x32\x15.caffe.PReLUParameter\x12\x32\n\x0fprior_box_param\x18\xcb\x01 \x01(\x0b\x32\x18.caffe.PriorBoxParameter\x12\x31\n\x0eproposal_param\x18\xd0\x01 \x01(\x0b\x32\x18.caffe.ProposalParameter\x12-\n\x0cpython_param\x18\x82\x01 \x01(\x0b\x32\x16.caffe.PythonParameter\x12\x33\n\x0frecurrent_param\x18\x92\x01 \x01(\x0b\x32\x19.caffe.RecurrentParameter\x12\x33\n\x0freduction_param\x18\x88\x01 \x01(\x0b\x32\x19.caffe.ReductionParameter\x12(\n\nrelu_param\x18{ \x01(\x0b\x32\x14.caffe.ReLUParameter\x12/\n\rreshape_param\x18\x85\x01 \x01(\x0b\x32\x17.caffe.ReshapeParameter\x12\x32\n\x0froi_align_param\x18\xd1\x01 \x01(\x0b\x32\x18.caffe.ROIAlignParameter\x12+\n\x0bscale_param\x18\x8e\x01 \x01(\x0b\x32\x15.caffe.ScaleParameter\x12.\n\rsigmoid_param\x18| \x01(\x0b\x32\x17.caffe.SigmoidParameter\x12.\n\rsoftmax_param\x18} \x01(\x0b\x32\x17.caffe.SoftmaxParameter\x12\'\n\tspp_param\x18\x84\x01 \x01(\x0b\x32\x13.caffe.SPPParameter\x12*\n\x0bslice_param\x18~ \x01(\x0b\x32\x15.caffe.SliceParameter\x12(\n\ntanh_param\x18\x7f \x01(\x0b\x32\x14.caffe.TanHParameter\x12\x33\n\x0fthreshold_param\x18\x80\x01 \x01(\x0b\x32\x19.caffe.ThresholdParameter\x12)\n\ntile_param\x18\x8a\x01 \x01(\x0b\x32\x14.caffe.TileParameter\x12\x34\n\x10video_data_param\x18\xcf\x01 \x01(\x0b\x32\x19.caffe.VideoDataParameter\x12\x36\n\x11window_data_param\x18\x81\x01 \x01(\x0b\x32\x1a.caffe.WindowDataParameter\x12\x35\n\x08st_param\x18\xac\x02 \x01(\x0b\x32".caffe.SpatialTransformerParameter\x12.\n\rst_loss_param\x18\xad\x02 \x01(\x0b\x32\x16.caffe.STLossParameter\x12\x34\n\x10power_file_param\x18\xae\x02 \x01(\x0b\x32\x19.caffe.PowerFileParameter\x12\x30\n\x0eloc_loss_param\x18\xaf\x02 \x01(\x0b\x32\x17.caffe.LocLossParameter\x12\x30\n\x0e\x63tc_loss_param\x18\xb0\x02 \x01(\x0b\x32\x17.caffe.CtcLossParameter\x12L\n\x1c\x63ontinuation_indicator_param\x18\xb1\x02 \x01(\x0b\x32%.caffe.ContinuationIndicatorParameter\x12L\n\x1clabelsequence_accuracy_param\x18\xb2\x02 \x01(\x0b\x32%.caffe.LabelsequenceAccuracyParameter\x12>\n\x15shuffle_channel_param\x18\xb3\x02 \x01(\x0b\x32\x1e.caffe.ShuffleChannelParameter\x12-\n\x0cinterp_param\x18\xb4\x02 \x01(\x0b\x32\x16.caffe.InterpParameter\x12+\n\x0brelu6_param\x18\xb5\x02 \x01(\x0b\x32\x15.caffe.ReLU6Parameter\x12)\n\naxpy_param\x18\xb6\x02 \x01(\x0b\x32\x14.caffe.AxpyParameter\x12\x31\n\x0eupsample_param\x18\xb7\x02 \x01(\x0b\x32\x18.caffe.UpsampleParameter\x12+\n\x0bswish_param\x18\xb8\x02 \x01(\x0b\x32\x15.caffe.SwishParameter\x12)\n\nmish_param\x18\xb9\x02 \x01(\x0b\x32\x14.caffe.MishParameter\x12+\n\x0breorg_param\x18\xba\x02 \x01(\x0b\x32\x15.caffe.ReorgParameter\x12/\n\rreverse_param\x18\xbb\x02 \x01(\x0b\x32\x17.caffe.ReverseParameter"\x90\x02\n\x1bSpatialTransformerParameter\x12\x1e\n\x0etransform_type\x18\x01 \x01(\t:\x06\x61\x66\x66ine\x12\x1e\n\x0csampler_type\x18\x02 \x01(\t:\x08\x62ilinear\x12\x10\n\x08output_H\x18\x03 \x01(\x05\x12\x10\n\x08output_W\x18\x04 \x01(\x05\x12\x1b\n\rto_compute_dU\x18\x05 \x01(\x08:\x04true\x12\x11\n\ttheta_1_1\x18\x06 \x01(\x01\x12\x11\n\ttheta_1_2\x18\x07 \x01(\x01\x12\x11\n\ttheta_1_3\x18\x08 \x01(\x01\x12\x11\n\ttheta_2_1\x18\t \x01(\x01\x12\x11\n\ttheta_2_2\x18\n \x01(\x01\x12\x11\n\ttheta_2_3\x18\x0b \x01(\x01"5\n\x0fSTLossParameter\x12\x10\n\x08output_H\x18\x01 \x02(\x05\x12\x10\n\x08output_W\x18\x02 \x02(\x05"(\n\x12PowerFileParameter\x12\x12\n\nshift_file\x18\x01 \x01(\t"%\n\x10LocLossParameter\x12\x11\n\tthreshold\x18\x01 \x02(\x01")\n\rClipParameter\x12\x0b\n\x03min\x18\x01 \x01(\x02\x12\x0b\n\x03max\x18\x02 \x01(\x02"Z\n\x10\x43tcLossParameter\x12\x18\n\ralphabet_size\x18\x01 \x01(\r:\x01\x30\x12\x14\n\ttime_step\x18\x03 \x01(\r:\x01\x30\x12\x16\n\x0b\x62lank_label\x18\x04 \x01(\x05:\x01\x30"M\n\x1e\x43ontinuationIndicatorParameter\x12\x14\n\ttime_step\x18\x01 \x01(\r:\x01\x30\x12\x15\n\nbatch_size\x18\x02 \x01(\r:\x01\x30"8\n\x1eLabelsequenceAccuracyParameter\x12\x16\n\x0b\x62lank_label\x18\x01 \x01(\x05:\x01\x30"+\n\x17ShuffleChannelParameter\x12\x10\n\x05group\x18\x01 \x01(\r:\x01\x31"\x90\x01\n\x0fInterpParameter\x12\x11\n\x06height\x18\x01 \x01(\x05:\x01\x30\x12\x10\n\x05width\x18\x02 \x01(\x05:\x01\x30\x12\x16\n\x0bzoom_factor\x18\x03 \x01(\x05:\x01\x31\x12\x18\n\rshrink_factor\x18\x04 \x01(\x05:\x01\x31\x12\x12\n\x07pad_beg\x18\x05 \x01(\x05:\x01\x30\x12\x12\n\x07pad_end\x18\x06 \x01(\x05:\x01\x30"+\n\x0eReLU6Parameter\x12\x19\n\x0enegative_slope\x18\x01 \x01(\x02:\x01\x30"\x0f\n\rAxpyParameter"%\n\x11UpsampleParameter\x12\x10\n\x05scale\x18\x01 \x01(\x05:\x01\x31"!\n\x0eSwishParameter\x12\x0f\n\x04\x62\x65ta\x18\x01 \x01(\x02:\x01\x31"r\n\rMishParameter\x12\x34\n\x06\x65ngine\x18\x02 \x01(\x0e\x32\x1b.caffe.MishParameter.Engine:\x07\x44\x45\x46\x41ULT"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02"8\n\x0eReorgParameter\x12\x0e\n\x06stride\x18\x01 \x01(\r\x12\x16\n\x07reverse\x18\x02 \x01(\x08:\x05\x66\x61lse"#\n\x10ReverseParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x30"\xca\x03\n\x17TransformationParameter\x12\x10\n\x05scale\x18\x01 \x01(\x02:\x01\x31\x12\x15\n\x06mirror\x18\x02 \x01(\x08:\x05\x66\x61lse\x12\x14\n\tcrop_size\x18\x03 \x01(\r:\x01\x30\x12\x11\n\x06\x63rop_h\x18\x0b \x01(\r:\x01\x30\x12\x11\n\x06\x63rop_w\x18\x0c \x01(\r:\x01\x30\x12\x11\n\tmean_file\x18\x04 \x01(\t\x12\x12\n\nmean_value\x18\x05 \x03(\x02\x12\x1a\n\x0b\x66orce_color\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x19\n\nforce_gray\x18\x07 \x01(\x08:\x05\x66\x61lse\x12,\n\x0cresize_param\x18\x08 \x01(\x0b\x32\x16.caffe.ResizeParameter\x12*\n\x0bnoise_param\x18\t \x01(\x0b\x32\x15.caffe.NoiseParameter\x12\x31\n\rdistort_param\x18\r \x01(\x0b\x32\x1a.caffe.DistortionParameter\x12/\n\x0c\x65xpand_param\x18\x0e \x01(\x0b\x32\x19.caffe.ExpansionParameter\x12.\n\x0f\x65mit_constraint\x18\n \x01(\x0b\x32\x15.caffe.EmitConstraint"\x90\x04\n\x0fResizeParameter\x12\x0f\n\x04prob\x18\x01 \x01(\x02:\x01\x31\x12=\n\x0bresize_mode\x18\x02 \x01(\x0e\x32".caffe.ResizeParameter.Resize_mode:\x04WARP\x12\x11\n\x06height\x18\x03 \x01(\r:\x01\x30\x12\x10\n\x05width\x18\x04 \x01(\r:\x01\x30\x12\x17\n\x0cheight_scale\x18\x08 \x01(\r:\x01\x30\x12\x16\n\x0bwidth_scale\x18\t \x01(\r:\x01\x30\x12;\n\x08pad_mode\x18\x05 \x01(\x0e\x32\x1f.caffe.ResizeParameter.Pad_mode:\x08\x43ONSTANT\x12\x11\n\tpad_value\x18\x06 \x03(\x02\x12\x37\n\x0binterp_mode\x18\x07 \x03(\x0e\x32".caffe.ResizeParameter.Interp_mode"G\n\x0bResize_mode\x12\x08\n\x04WARP\x10\x01\x12\x12\n\x0e\x46IT_SMALL_SIZE\x10\x02\x12\x1a\n\x16\x46IT_LARGE_SIZE_AND_PAD\x10\x03":\n\x08Pad_mode\x12\x0c\n\x08\x43ONSTANT\x10\x01\x12\x0c\n\x08MIRRORED\x10\x02\x12\x12\n\x0eREPEAT_NEAREST\x10\x03"I\n\x0bInterp_mode\x12\n\n\x06LINEAR\x10\x01\x12\x08\n\x04\x41REA\x10\x02\x12\x0b\n\x07NEAREST\x10\x03\x12\t\n\x05\x43UBIC\x10\x04\x12\x0c\n\x08LANCZOS4\x10\x05"9\n\x13SaltPepperParameter\x12\x13\n\x08\x66raction\x18\x01 \x01(\x02:\x01\x30\x12\r\n\x05value\x18\x02 \x03(\x02"\xee\x02\n\x0eNoiseParameter\x12\x0f\n\x04prob\x18\x01 \x01(\x02:\x01\x30\x12\x16\n\x07hist_eq\x18\x02 \x01(\x08:\x05\x66\x61lse\x12\x16\n\x07inverse\x18\x03 \x01(\x08:\x05\x66\x61lse\x12\x19\n\ndecolorize\x18\x04 \x01(\x08:\x05\x66\x61lse\x12\x19\n\ngauss_blur\x18\x05 \x01(\x08:\x05\x66\x61lse\x12\x10\n\x04jpeg\x18\x06 \x01(\x02:\x02-1\x12\x18\n\tposterize\x18\x07 \x01(\x08:\x05\x66\x61lse\x12\x14\n\x05\x65rode\x18\x08 \x01(\x08:\x05\x66\x61lse\x12\x19\n\nsaltpepper\x18\t \x01(\x08:\x05\x66\x61lse\x12\x34\n\x10saltpepper_param\x18\n \x01(\x0b\x32\x1a.caffe.SaltPepperParameter\x12\x14\n\x05\x63lahe\x18\x0b \x01(\x08:\x05\x66\x61lse\x12\x1d\n\x0e\x63onvert_to_hsv\x18\x0c \x01(\x08:\x05\x66\x61lse\x12\x1d\n\x0e\x63onvert_to_lab\x18\r \x01(\x08:\x05\x66\x61lse"\xbd\x02\n\x13\x44istortionParameter\x12\x1a\n\x0f\x62rightness_prob\x18\x01 \x01(\x02:\x01\x30\x12\x1b\n\x10\x62rightness_delta\x18\x02 \x01(\x02:\x01\x30\x12\x18\n\rcontrast_prob\x18\x03 \x01(\x02:\x01\x30\x12\x19\n\x0e\x63ontrast_lower\x18\x04 \x01(\x02:\x01\x30\x12\x19\n\x0e\x63ontrast_upper\x18\x05 \x01(\x02:\x01\x30\x12\x13\n\x08hue_prob\x18\x06 \x01(\x02:\x01\x30\x12\x14\n\thue_delta\x18\x07 \x01(\x02:\x01\x30\x12\x1a\n\x0fsaturation_prob\x18\x08 \x01(\x02:\x01\x30\x12\x1b\n\x10saturation_lower\x18\t \x01(\x02:\x01\x30\x12\x1b\n\x10saturation_upper\x18\n \x01(\x02:\x01\x30\x12\x1c\n\x11random_order_prob\x18\x0b \x01(\x02:\x01\x30"B\n\x12\x45xpansionParameter\x12\x0f\n\x04prob\x18\x01 \x01(\x02:\x01\x31\x12\x1b\n\x10max_expand_ratio\x18\x02 \x01(\x02:\x01\x31"\xc2\x01\n\rLossParameter\x12\x14\n\x0cignore_label\x18\x01 \x01(\x05\x12\x44\n\rnormalization\x18\x03 \x01(\x0e\x32&.caffe.LossParameter.NormalizationMode:\x05VALID\x12\x11\n\tnormalize\x18\x02 \x01(\x08"B\n\x11NormalizationMode\x12\x08\n\x04\x46ULL\x10\x00\x12\t\n\x05VALID\x10\x01\x12\x0e\n\nBATCH_SIZE\x10\x02\x12\x08\n\x04NONE\x10\x03"L\n\x11\x41\x63\x63uracyParameter\x12\x10\n\x05top_k\x18\x01 \x01(\r:\x01\x31\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x31\x12\x14\n\x0cignore_label\x18\x03 \x01(\x05"\x95\x01\n\x16\x41nnotatedDataParameter\x12*\n\rbatch_sampler\x18\x01 \x03(\x0b\x32\x13.caffe.BatchSampler\x12\x16\n\x0elabel_map_file\x18\x02 \x01(\t\x12\x37\n\tanno_type\x18\x03 \x01(\x0e\x32$.caffe.AnnotatedDatum.AnnotationType"M\n\x0f\x41rgMaxParameter\x12\x1a\n\x0bout_max_val\x18\x01 \x01(\x08:\x05\x66\x61lse\x12\x10\n\x05top_k\x18\x02 \x01(\r:\x01\x31\x12\x0c\n\x04\x61xis\x18\x03 \x01(\x05"9\n\x0f\x43oncatParameter\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x31\x12\x15\n\nconcat_dim\x18\x01 \x01(\r:\x01\x31"j\n\x12\x42\x61tchNormParameter\x12\x18\n\x10use_global_stats\x18\x01 \x01(\x08\x12&\n\x17moving_average_fraction\x18\x02 \x01(\x02:\x05\x30.999\x12\x12\n\x03\x65ps\x18\x03 \x01(\x02:\x05\x31\x65-05"]\n\rBiasParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\x13\n\x08num_axes\x18\x02 \x01(\x05:\x01\x31\x12&\n\x06\x66iller\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter"L\n\x18\x43ontrastiveLossParameter\x12\x11\n\x06margin\x18\x01 \x01(\x02:\x01\x31\x12\x1d\n\x0elegacy_version\x18\x02 \x01(\x08:\x05\x66\x61lse"\xfc\x03\n\x14\x43onvolutionParameter\x12\x12\n\nnum_output\x18\x01 \x01(\r\x12\x17\n\tbias_term\x18\x02 \x01(\x08:\x04true\x12\x0b\n\x03pad\x18\x03 \x03(\r\x12\x13\n\x0bkernel_size\x18\x04 \x03(\r\x12\x0e\n\x06stride\x18\x06 \x03(\r\x12\x10\n\x08\x64ilation\x18\x12 \x03(\r\x12\x10\n\x05pad_h\x18\t \x01(\r:\x01\x30\x12\x10\n\x05pad_w\x18\n \x01(\r:\x01\x30\x12\x10\n\x08kernel_h\x18\x0b \x01(\r\x12\x10\n\x08kernel_w\x18\x0c \x01(\r\x12\x10\n\x08stride_h\x18\r \x01(\r\x12\x10\n\x08stride_w\x18\x0e \x01(\r\x12\x10\n\x05group\x18\x05 \x01(\r:\x01\x31\x12-\n\rweight_filler\x18\x07 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x08 \x01(\x0b\x32\x16.caffe.FillerParameter\x12;\n\x06\x65ngine\x18\x0f \x01(\x0e\x32".caffe.ConvolutionParameter.Engine:\x07\x44\x45\x46\x41ULT\x12\x0f\n\x04\x61xis\x18\x10 \x01(\x05:\x01\x31\x12\x1e\n\x0f\x66orce_nd_im2col\x18\x11 \x01(\x08:\x05\x66\x61lse"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02"0\n\rCropParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x32\x12\x0e\n\x06offset\x18\x02 \x03(\r"\xa4\x02\n\rDataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x12\n\nbatch_size\x18\x04 \x01(\r\x12\x14\n\trand_skip\x18\x07 \x01(\r:\x01\x30\x12\x31\n\x07\x62\x61\x63kend\x18\x08 \x01(\x0e\x32\x17.caffe.DataParameter.DB:\x07LEVELDB\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x11\n\tmean_file\x18\x03 \x01(\t\x12\x14\n\tcrop_size\x18\x05 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x06 \x01(\x08:\x05\x66\x61lse\x12"\n\x13\x66orce_encoded_color\x18\t \x01(\x08:\x05\x66\x61lse\x12\x13\n\x08prefetch\x18\n \x01(\r:\x01\x34"\x1b\n\x02\x44\x42\x12\x0b\n\x07LEVELDB\x10\x00\x12\x08\n\x04LMDB\x10\x01"\xdc\x01\n\x1a\x44\x65tectionEvaluateParameter\x12\x13\n\x0bnum_classes\x18\x01 \x01(\r\x12\x1e\n\x13\x62\x61\x63kground_label_id\x18\x02 \x01(\r:\x01\x30\x12\x1e\n\x11overlap_threshold\x18\x03 \x01(\x02:\x03\x30.5\x12#\n\x15\x65valuate_difficult_gt\x18\x04 \x01(\x08:\x04true\x12\x16\n\x0ename_size_file\x18\x05 \x01(\t\x12,\n\x0cresize_param\x18\x06 \x01(\x0b\x32\x16.caffe.ResizeParameter"[\n\x1eNonMaximumSuppressionParameter\x12\x1a\n\rnms_threshold\x18\x01 \x01(\x02:\x03\x30.3\x12\r\n\x05top_k\x18\x02 \x01(\x05\x12\x0e\n\x03\x65ta\x18\x03 \x01(\x02:\x01\x31"\xd8\x01\n\x13SaveOutputParameter\x12\x18\n\x10output_directory\x18\x01 \x01(\t\x12\x1a\n\x12output_name_prefix\x18\x02 \x01(\t\x12\x15\n\routput_format\x18\x03 \x01(\t\x12\x16\n\x0elabel_map_file\x18\x04 \x01(\t\x12\x16\n\x0ename_size_file\x18\x05 \x01(\t\x12\x16\n\x0enum_test_image\x18\x06 \x01(\r\x12,\n\x0cresize_param\x18\x07 \x01(\x0b\x32\x16.caffe.ResizeParameter"\xc7\x03\n\x18\x44\x65tectionOutputParameter\x12\x13\n\x0bnum_classes\x18\x01 \x01(\r\x12\x1c\n\x0eshare_location\x18\x02 \x01(\x08:\x04true\x12\x1e\n\x13\x62\x61\x63kground_label_id\x18\x03 \x01(\x05:\x01\x30\x12\x38\n\tnms_param\x18\x04 \x01(\x0b\x32%.caffe.NonMaximumSuppressionParameter\x12\x35\n\x11save_output_param\x18\x05 \x01(\x0b\x32\x1a.caffe.SaveOutputParameter\x12<\n\tcode_type\x18\x06 \x01(\x0e\x32!.caffe.PriorBoxParameter.CodeType:\x06\x43ORNER\x12)\n\x1avariance_encoded_in_target\x18\x08 \x01(\x08:\x05\x66\x61lse\x12\x16\n\nkeep_top_k\x18\x07 \x01(\x05:\x02-1\x12\x1c\n\x14\x63onfidence_threshold\x18\t \x01(\x02\x12\x18\n\tvisualize\x18\n \x01(\x08:\x05\x66\x61lse\x12\x1b\n\x13visualize_threshold\x18\x0b \x01(\x02\x12\x11\n\tsave_file\x18\x0c \x01(\t".\n\x10\x44ropoutParameter\x12\x1a\n\rdropout_ratio\x18\x01 \x01(\x02:\x03\x30.5"\xa0\x01\n\x12\x44ummyDataParameter\x12+\n\x0b\x64\x61ta_filler\x18\x01 \x03(\x0b\x32\x16.caffe.FillerParameter\x12\x1f\n\x05shape\x18\x06 \x03(\x0b\x32\x10.caffe.BlobShape\x12\x0b\n\x03num\x18\x02 \x03(\r\x12\x10\n\x08\x63hannels\x18\x03 \x03(\r\x12\x0e\n\x06height\x18\x04 \x03(\r\x12\r\n\x05width\x18\x05 \x03(\r"\xa5\x01\n\x10\x45ltwiseParameter\x12\x39\n\toperation\x18\x01 \x01(\x0e\x32!.caffe.EltwiseParameter.EltwiseOp:\x03SUM\x12\r\n\x05\x63oeff\x18\x02 \x03(\x02\x12\x1e\n\x10stable_prod_grad\x18\x03 \x01(\x08:\x04true"\'\n\tEltwiseOp\x12\x08\n\x04PROD\x10\x00\x12\x07\n\x03SUM\x10\x01\x12\x07\n\x03MAX\x10\x02" \n\x0c\x45LUParameter\x12\x10\n\x05\x61lpha\x18\x01 \x01(\x02:\x01\x31"\xac\x01\n\x0e\x45mbedParameter\x12\x12\n\nnum_output\x18\x01 \x01(\r\x12\x11\n\tinput_dim\x18\x02 \x01(\r\x12\x17\n\tbias_term\x18\x03 \x01(\x08:\x04true\x12-\n\rweight_filler\x18\x04 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x05 \x01(\x0b\x32\x16.caffe.FillerParameter"D\n\x0c\x45xpParameter\x12\x10\n\x04\x62\x61se\x18\x01 \x01(\x02:\x02-1\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x10\n\x05shift\x18\x03 \x01(\x02:\x01\x30"9\n\x10\x46lattenParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\x14\n\x08\x65nd_axis\x18\x02 \x01(\x05:\x02-1"O\n\x11HDF5DataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x12\n\nbatch_size\x18\x02 \x01(\r\x12\x16\n\x07shuffle\x18\x03 \x01(\x08:\x05\x66\x61lse"(\n\x13HDF5OutputParameter\x12\x11\n\tfile_name\x18\x01 \x01(\t"^\n\x12HingeLossParameter\x12\x30\n\x04norm\x18\x01 \x01(\x0e\x32\x1e.caffe.HingeLossParameter.Norm:\x02L1"\x16\n\x04Norm\x12\x06\n\x02L1\x10\x01\x12\x06\n\x02L2\x10\x02"\x97\x02\n\x12ImageDataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x15\n\nbatch_size\x18\x04 \x01(\r:\x01\x31\x12\x14\n\trand_skip\x18\x07 \x01(\r:\x01\x30\x12\x16\n\x07shuffle\x18\x08 \x01(\x08:\x05\x66\x61lse\x12\x15\n\nnew_height\x18\t \x01(\r:\x01\x30\x12\x14\n\tnew_width\x18\n \x01(\r:\x01\x30\x12\x16\n\x08is_color\x18\x0b \x01(\x08:\x04true\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x11\n\tmean_file\x18\x03 \x01(\t\x12\x14\n\tcrop_size\x18\x05 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x15\n\x0broot_folder\x18\x0c \x01(\t:\x00"\'\n\x15InfogainLossParameter\x12\x0e\n\x06source\x18\x01 \x01(\t"\xcb\x01\n\x15InnerProductParameter\x12\x12\n\nnum_output\x18\x01 \x01(\r\x12\x17\n\tbias_term\x18\x02 \x01(\x08:\x04true\x12-\n\rweight_filler\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x04 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x0f\n\x04\x61xis\x18\x05 \x01(\x05:\x01\x31\x12\x18\n\ttranspose\x18\x06 \x01(\x08:\x05\x66\x61lse"1\n\x0eInputParameter\x12\x1f\n\x05shape\x18\x01 \x03(\x0b\x32\x10.caffe.BlobShape"D\n\x0cLogParameter\x12\x10\n\x04\x62\x61se\x18\x01 \x01(\x02:\x02-1\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x10\n\x05shift\x18\x03 \x01(\x02:\x01\x30"\xb8\x02\n\x0cLRNParameter\x12\x15\n\nlocal_size\x18\x01 \x01(\r:\x01\x35\x12\x10\n\x05\x61lpha\x18\x02 \x01(\x02:\x01\x31\x12\x12\n\x04\x62\x65ta\x18\x03 \x01(\x02:\x04\x30.75\x12\x44\n\x0bnorm_region\x18\x04 \x01(\x0e\x32\x1e.caffe.LRNParameter.NormRegion:\x0f\x41\x43ROSS_CHANNELS\x12\x0c\n\x01k\x18\x05 \x01(\x02:\x01\x31\x12\x33\n\x06\x65ngine\x18\x06 \x01(\x0e\x32\x1a.caffe.LRNParameter.Engine:\x07\x44\x45\x46\x41ULT"5\n\nNormRegion\x12\x13\n\x0f\x41\x43ROSS_CHANNELS\x10\x00\x12\x12\n\x0eWITHIN_CHANNEL\x10\x01"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02"Z\n\x13MemoryDataParameter\x12\x12\n\nbatch_size\x18\x01 \x01(\r\x12\x10\n\x08\x63hannels\x18\x02 \x01(\r\x12\x0e\n\x06height\x18\x03 \x01(\r\x12\r\n\x05width\x18\x04 \x01(\r"\xe8\x08\n\x15MultiBoxLossParameter\x12J\n\rloc_loss_type\x18\x01 \x01(\x0e\x32(.caffe.MultiBoxLossParameter.LocLossType:\tSMOOTH_L1\x12J\n\x0e\x63onf_loss_type\x18\x02 \x01(\x0e\x32).caffe.MultiBoxLossParameter.ConfLossType:\x07SOFTMAX\x12\x15\n\nloc_weight\x18\x03 \x01(\x02:\x01\x31\x12\x13\n\x0bnum_classes\x18\x04 \x01(\r\x12\x1c\n\x0eshare_location\x18\x05 \x01(\x08:\x04true\x12J\n\nmatch_type\x18\x06 \x01(\x0e\x32&.caffe.MultiBoxLossParameter.MatchType:\x0ePER_PREDICTION\x12\x1e\n\x11overlap_threshold\x18\x07 \x01(\x02:\x03\x30.5\x12$\n\x16use_prior_for_matching\x18\x08 \x01(\x08:\x04true\x12\x1e\n\x13\x62\x61\x63kground_label_id\x18\t \x01(\r:\x01\x30\x12\x1e\n\x10use_difficult_gt\x18\n \x01(\x08:\x04true\x12\x15\n\rdo_neg_mining\x18\x0b \x01(\x08\x12\x18\n\rneg_pos_ratio\x18\x0c \x01(\x02:\x01\x33\x12\x18\n\x0bneg_overlap\x18\r \x01(\x02:\x03\x30.5\x12<\n\tcode_type\x18\x0e \x01(\x0e\x32!.caffe.PriorBoxParameter.CodeType:\x06\x43ORNER\x12(\n\x19\x65ncode_variance_in_target\x18\x10 \x01(\x08:\x05\x66\x61lse\x12%\n\x16map_object_to_agnostic\x18\x11 \x01(\x08:\x05\x66\x61lse\x12)\n\x1aignore_cross_boundary_bbox\x18\x12 \x01(\x08:\x05\x66\x61lse\x12\x18\n\tbp_inside\x18\x13 \x01(\x08:\x05\x66\x61lse\x12J\n\x0bmining_type\x18\x14 \x01(\x0e\x32\'.caffe.MultiBoxLossParameter.MiningType:\x0cMAX_NEGATIVE\x12\x38\n\tnms_param\x18\x15 \x01(\x0b\x32%.caffe.NonMaximumSuppressionParameter\x12\x17\n\x0bsample_size\x18\x16 \x01(\x05:\x02\x36\x34\x12 \n\x11use_prior_for_nms\x18\x17 \x01(\x08:\x05\x66\x61lse"$\n\x0bLocLossType\x12\x06\n\x02L2\x10\x00\x12\r\n\tSMOOTH_L1\x10\x01")\n\x0c\x43onfLossType\x12\x0b\n\x07SOFTMAX\x10\x00\x12\x0c\n\x08LOGISTIC\x10\x01".\n\tMatchType\x12\r\n\tBIPARTITE\x10\x00\x12\x12\n\x0ePER_PREDICTION\x10\x01":\n\nMiningType\x12\x08\n\x04NONE\x10\x00\x12\x10\n\x0cMAX_NEGATIVE\x10\x01\x12\x10\n\x0cHARD_EXAMPLE\x10\x02"d\n\x0cMVNParameter\x12 \n\x12normalize_variance\x18\x01 \x01(\x08:\x04true\x12\x1e\n\x0f\x61\x63ross_channels\x18\x02 \x01(\x08:\x05\x66\x61lse\x12\x12\n\x03\x65ps\x18\x03 \x01(\x02:\x05\x31\x65-09"\x92\x01\n\x12NormalizeParameter\x12\x1c\n\x0e\x61\x63ross_spatial\x18\x01 \x01(\x08:\x04true\x12,\n\x0cscale_filler\x18\x02 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x1c\n\x0e\x63hannel_shared\x18\x03 \x01(\x08:\x04true\x12\x12\n\x03\x65ps\x18\x04 \x01(\x02:\x05\x31\x65-10"5\n\x12ParameterParameter\x12\x1f\n\x05shape\x18\x01 \x01(\x0b\x32\x10.caffe.BlobShape"!\n\x10PermuteParameter\x12\r\n\x05order\x18\x01 \x03(\r"\x81\x04\n\x10PoolingParameter\x12\x35\n\x04pool\x18\x01 \x01(\x0e\x32".caffe.PoolingParameter.PoolMethod:\x03MAX\x12\x0e\n\x03pad\x18\x04 \x01(\r:\x01\x30\x12\x10\n\x05pad_h\x18\t \x01(\r:\x01\x30\x12\x10\n\x05pad_w\x18\n \x01(\r:\x01\x30\x12\x13\n\x0bkernel_size\x18\x02 \x01(\r\x12\x10\n\x08kernel_h\x18\x05 \x01(\r\x12\x10\n\x08kernel_w\x18\x06 \x01(\r\x12\x11\n\x06stride\x18\x03 \x01(\r:\x01\x31\x12\x10\n\x08stride_h\x18\x07 \x01(\r\x12\x10\n\x08stride_w\x18\x08 \x01(\r\x12\x37\n\x06\x65ngine\x18\x0b \x01(\x0e\x32\x1e.caffe.PoolingParameter.Engine:\x07\x44\x45\x46\x41ULT\x12\x1d\n\x0eglobal_pooling\x18\x0c \x01(\x08:\x05\x66\x61lse\x12;\n\nround_mode\x18\r \x01(\x0e\x32!.caffe.PoolingParameter.RoundMode:\x04\x43\x45IL".\n\nPoolMethod\x12\x07\n\x03MAX\x10\x00\x12\x07\n\x03\x41VE\x10\x01\x12\x0e\n\nSTOCHASTIC\x10\x02"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02" \n\tRoundMode\x12\x08\n\x04\x43\x45IL\x10\x00\x12\t\n\x05\x46LOOR\x10\x01"F\n\x0ePowerParameter\x12\x10\n\x05power\x18\x01 \x01(\x02:\x01\x31\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x10\n\x05shift\x18\x03 \x01(\x02:\x01\x30"\xb5\x02\n\x11PriorBoxParameter\x12\x10\n\x08min_size\x18\x01 \x03(\x02\x12\x10\n\x08max_size\x18\x02 \x03(\x02\x12\x14\n\x0c\x61spect_ratio\x18\x03 \x03(\x02\x12\x12\n\x04\x66lip\x18\x04 \x01(\x08:\x04true\x12\x13\n\x04\x63lip\x18\x05 \x01(\x08:\x05\x66\x61lse\x12\x10\n\x08variance\x18\x06 \x03(\x02\x12\x10\n\x08img_size\x18\x07 \x01(\r\x12\r\n\x05img_h\x18\x08 \x01(\r\x12\r\n\x05img_w\x18\t \x01(\r\x12\x0c\n\x04step\x18\n \x01(\x02\x12\x0e\n\x06step_h\x18\x0b \x01(\x02\x12\x0e\n\x06step_w\x18\x0c \x01(\x02\x12\x13\n\x06offset\x18\r \x01(\x02:\x03\x30.5"8\n\x08\x43odeType\x12\n\n\x06\x43ORNER\x10\x01\x12\x0f\n\x0b\x43\x45NTER_SIZE\x10\x02\x12\x0f\n\x0b\x43ORNER_SIZE\x10\x03"\xc8\x01\n\x11ProposalParameter\x12\x17\n\x0b\x66\x65\x61t_stride\x18\x01 \x01(\r:\x02\x31\x36\x12\x15\n\tbase_size\x18\x02 \x01(\r:\x02\x31\x36\x12\x14\n\x08min_size\x18\x03 \x01(\r:\x02\x31\x36\x12\r\n\x05ratio\x18\x04 \x03(\x02\x12\r\n\x05scale\x18\x05 \x03(\r\x12\x1a\n\x0cpre_nms_topn\x18\x06 \x01(\r:\x04\x36\x30\x30\x30\x12\x1a\n\rpost_nms_topn\x18\x07 \x01(\r:\x03\x33\x30\x30\x12\x17\n\nnms_thresh\x18\x08 \x01(\x02:\x03\x30.7"g\n\x0fPythonParameter\x12\x0e\n\x06module\x18\x01 \x01(\t\x12\r\n\x05layer\x18\x02 \x01(\t\x12\x13\n\tparam_str\x18\x03 \x01(\t:\x00\x12 \n\x11share_in_parallel\x18\x04 \x01(\x08:\x05\x66\x61lse"\xc0\x01\n\x12RecurrentParameter\x12\x15\n\nnum_output\x18\x01 \x01(\r:\x01\x30\x12-\n\rweight_filler\x18\x02 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x19\n\ndebug_info\x18\x04 \x01(\x08:\x05\x66\x61lse\x12\x1c\n\rexpose_hidden\x18\x05 \x01(\x08:\x05\x66\x61lse"\xad\x01\n\x12ReductionParameter\x12=\n\toperation\x18\x01 \x01(\x0e\x32%.caffe.ReductionParameter.ReductionOp:\x03SUM\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x30\x12\x10\n\x05\x63oeff\x18\x03 \x01(\x02:\x01\x31"5\n\x0bReductionOp\x12\x07\n\x03SUM\x10\x01\x12\x08\n\x04\x41SUM\x10\x02\x12\t\n\x05SUMSQ\x10\x03\x12\x08\n\x04MEAN\x10\x04"\x8d\x01\n\rReLUParameter\x12\x19\n\x0enegative_slope\x18\x01 \x01(\x02:\x01\x30\x12\x34\n\x06\x65ngine\x18\x02 \x01(\x0e\x32\x1b.caffe.ReLUParameter.Engine:\x07\x44\x45\x46\x41ULT"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02"Z\n\x10ReshapeParameter\x12\x1f\n\x05shape\x18\x01 \x01(\x0b\x32\x10.caffe.BlobShape\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x30\x12\x14\n\x08num_axes\x18\x03 \x01(\x05:\x02-1"r\n\x11ROIAlignParameter\x12\x13\n\x08pooled_h\x18\x01 \x01(\r:\x01\x30\x12\x13\n\x08pooled_w\x18\x02 \x01(\r:\x01\x30\x12\x18\n\rspatial_scale\x18\x03 \x01(\x02:\x01\x31\x12\x19\n\x0esampling_ratio\x18\x04 \x01(\x05:\x01\x32"\xa5\x01\n\x0eScaleParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\x13\n\x08num_axes\x18\x02 \x01(\x05:\x01\x31\x12&\n\x06\x66iller\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x18\n\tbias_term\x18\x04 \x01(\x08:\x05\x66\x61lse\x12+\n\x0b\x62ias_filler\x18\x05 \x01(\x0b\x32\x16.caffe.FillerParameter"x\n\x10SigmoidParameter\x12\x37\n\x06\x65ngine\x18\x01 \x01(\x0e\x32\x1e.caffe.SigmoidParameter.Engine:\x07\x44\x45\x46\x41ULT"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02"L\n\x0eSliceParameter\x12\x0f\n\x04\x61xis\x18\x03 \x01(\x05:\x01\x31\x12\x13\n\x0bslice_point\x18\x02 \x03(\r\x12\x14\n\tslice_dim\x18\x01 \x01(\r:\x01\x31"\x89\x01\n\x10SoftmaxParameter\x12\x37\n\x06\x65ngine\x18\x01 \x01(\x0e\x32\x1e.caffe.SoftmaxParameter.Engine:\x07\x44\x45\x46\x41ULT\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x31"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02"r\n\rTanHParameter\x12\x34\n\x06\x65ngine\x18\x01 \x01(\x0e\x32\x1b.caffe.TanHParameter.Engine:\x07\x44\x45\x46\x41ULT"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02"/\n\rTileParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\r\n\x05tiles\x18\x02 \x01(\x05"*\n\x12ThresholdParameter\x12\x14\n\tthreshold\x18\x01 \x01(\x02:\x01\x30"\xbb\x01\n\x12VideoDataParameter\x12?\n\nvideo_type\x18\x01 \x01(\x0e\x32#.caffe.VideoDataParameter.VideoType:\x06WEBCAM\x12\x14\n\tdevice_id\x18\x02 \x01(\x05:\x01\x30\x12\x12\n\nvideo_file\x18\x03 \x01(\t\x12\x16\n\x0bskip_frames\x18\x04 \x01(\r:\x01\x30""\n\tVideoType\x12\n\n\x06WEBCAM\x10\x00\x12\t\n\x05VIDEO\x10\x01"\xc1\x02\n\x13WindowDataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x11\n\tmean_file\x18\x03 \x01(\t\x12\x12\n\nbatch_size\x18\x04 \x01(\r\x12\x14\n\tcrop_size\x18\x05 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x19\n\x0c\x66g_threshold\x18\x07 \x01(\x02:\x03\x30.5\x12\x19\n\x0c\x62g_threshold\x18\x08 \x01(\x02:\x03\x30.5\x12\x19\n\x0b\x66g_fraction\x18\t \x01(\x02:\x04\x30.25\x12\x16\n\x0b\x63ontext_pad\x18\n \x01(\r:\x01\x30\x12\x17\n\tcrop_mode\x18\x0b \x01(\t:\x04warp\x12\x1b\n\x0c\x63\x61\x63he_images\x18\x0c \x01(\x08:\x05\x66\x61lse\x12\x15\n\x0broot_folder\x18\r \x01(\t:\x00"\xeb\x01\n\x0cSPPParameter\x12\x16\n\x0epyramid_height\x18\x01 \x01(\r\x12\x31\n\x04pool\x18\x02 \x01(\x0e\x32\x1e.caffe.SPPParameter.PoolMethod:\x03MAX\x12\x33\n\x06\x65ngine\x18\x06 \x01(\x0e\x32\x1a.caffe.SPPParameter.Engine:\x07\x44\x45\x46\x41ULT".\n\nPoolMethod\x12\x07\n\x03MAX\x10\x00\x12\x07\n\x03\x41VE\x10\x01\x12\x0e\n\nSTOCHASTIC\x10\x02"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02"\xa0\x14\n\x10V1LayerParameter\x12\x0e\n\x06\x62ottom\x18\x02 \x03(\t\x12\x0b\n\x03top\x18\x03 \x03(\t\x12\x0c\n\x04name\x18\x04 \x01(\t\x12$\n\x07include\x18  \x03(\x0b\x32\x13.caffe.NetStateRule\x12$\n\x07\x65xclude\x18! \x03(\x0b\x32\x13.caffe.NetStateRule\x12/\n\x04type\x18\x05 \x01(\x0e\x32!.caffe.V1LayerParameter.LayerType\x12\x1f\n\x05\x62lobs\x18\x06 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x0e\n\x05param\x18\xe9\x07 \x03(\t\x12>\n\x0f\x62lob_share_mode\x18\xea\x07 \x03(\x0e\x32$.caffe.V1LayerParameter.DimCheckMode\x12\x10\n\x08\x62lobs_lr\x18\x07 \x03(\x02\x12\x14\n\x0cweight_decay\x18\x08 \x03(\x02\x12\x13\n\x0bloss_weight\x18# \x03(\x02\x12\x30\n\x0e\x61\x63\x63uracy_param\x18\x1b \x01(\x0b\x32\x18.caffe.AccuracyParameter\x12,\n\x0c\x61rgmax_param\x18\x17 \x01(\x0b\x32\x16.caffe.ArgMaxParameter\x12,\n\x0c\x63oncat_param\x18\t \x01(\x0b\x32\x16.caffe.ConcatParameter\x12?\n\x16\x63ontrastive_loss_param\x18( \x01(\x0b\x32\x1f.caffe.ContrastiveLossParameter\x12\x36\n\x11\x63onvolution_param\x18\n \x01(\x0b\x32\x1b.caffe.ConvolutionParameter\x12\x30\n\x0eupsample_param\x18+ \x01(\x0b\x32\x18.caffe.UpsampleParameter\x12(\n\ndata_param\x18\x0b \x01(\x0b\x32\x14.caffe.DataParameter\x12.\n\rdropout_param\x18\x0c \x01(\x0b\x32\x17.caffe.DropoutParameter\x12\x33\n\x10\x64ummy_data_param\x18\x1a \x01(\x0b\x32\x19.caffe.DummyDataParameter\x12.\n\reltwise_param\x18\x18 \x01(\x0b\x32\x17.caffe.EltwiseParameter\x12&\n\texp_param\x18) \x01(\x0b\x32\x13.caffe.ExpParameter\x12\x31\n\x0fhdf5_data_param\x18\r \x01(\x0b\x32\x18.caffe.HDF5DataParameter\x12\x35\n\x11hdf5_output_param\x18\x0e \x01(\x0b\x32\x1a.caffe.HDF5OutputParameter\x12\x33\n\x10hinge_loss_param\x18\x1d \x01(\x0b\x32\x19.caffe.HingeLossParameter\x12\x33\n\x10image_data_param\x18\x0f \x01(\x0b\x32\x19.caffe.ImageDataParameter\x12\x39\n\x13infogain_loss_param\x18\x10 \x01(\x0b\x32\x1c.caffe.InfogainLossParameter\x12\x39\n\x13inner_product_param\x18\x11 \x01(\x0b\x32\x1c.caffe.InnerProductParameter\x12&\n\tlrn_param\x18\x12 \x01(\x0b\x32\x13.caffe.LRNParameter\x12\x35\n\x11memory_data_param\x18\x16 \x01(\x0b\x32\x1a.caffe.MemoryDataParameter\x12&\n\tmvn_param\x18" \x01(\x0b\x32\x13.caffe.MVNParameter\x12.\n\rpooling_param\x18\x13 \x01(\x0b\x32\x17.caffe.PoolingParameter\x12*\n\x0bpower_param\x18\x15 \x01(\x0b\x32\x15.caffe.PowerParameter\x12(\n\nrelu_param\x18\x1e \x01(\x0b\x32\x14.caffe.ReLUParameter\x12.\n\rsigmoid_param\x18& \x01(\x0b\x32\x17.caffe.SigmoidParameter\x12.\n\rsoftmax_param\x18\' \x01(\x0b\x32\x17.caffe.SoftmaxParameter\x12*\n\x0bslice_param\x18\x1f \x01(\x0b\x32\x15.caffe.SliceParameter\x12(\n\ntanh_param\x18% \x01(\x0b\x32\x14.caffe.TanHParameter\x12\x32\n\x0fthreshold_param\x18\x19 \x01(\x0b\x32\x19.caffe.ThresholdParameter\x12\x35\n\x11window_data_param\x18\x14 \x01(\x0b\x32\x1a.caffe.WindowDataParameter\x12\x37\n\x0ftransform_param\x18$ \x01(\x0b\x32\x1e.caffe.TransformationParameter\x12(\n\nloss_param\x18* \x01(\x0b\x32\x14.caffe.LossParameter\x12&\n\x05layer\x18\x01 \x01(\x0b\x32\x17.caffe.V0LayerParameter"\xe6\x04\n\tLayerType\x12\x08\n\x04NONE\x10\x00\x12\n\n\x06\x41\x42SVAL\x10#\x12\x0c\n\x08\x41\x43\x43URACY\x10\x01\x12\n\n\x06\x41RGMAX\x10\x1e\x12\x08\n\x04\x42NLL\x10\x02\x12\n\n\x06\x43ONCAT\x10\x03\x12\x14\n\x10\x43ONTRASTIVE_LOSS\x10%\x12\x0f\n\x0b\x43ONVOLUTION\x10\x04\x12\x0c\n\x08UPSAMPLE\x10(\x12\x08\n\x04\x44\x41TA\x10\x05\x12\x11\n\rDECONVOLUTION\x10\'\x12\x0b\n\x07\x44ROPOUT\x10\x06\x12\x0e\n\nDUMMY_DATA\x10 \x12\x12\n\x0e\x45UCLIDEAN_LOSS\x10\x07\x12\x0b\n\x07\x45LTWISE\x10\x19\x12\x07\n\x03\x45XP\x10&\x12\x0b\n\x07\x46LATTEN\x10\x08\x12\r\n\tHDF5_DATA\x10\t\x12\x0f\n\x0bHDF5_OUTPUT\x10\n\x12\x0e\n\nHINGE_LOSS\x10\x1c\x12\n\n\x06IM2COL\x10\x0b\x12\x0e\n\nIMAGE_DATA\x10\x0c\x12\x11\n\rINFOGAIN_LOSS\x10\r\x12\x11\n\rINNER_PRODUCT\x10\x0e\x12\x07\n\x03LRN\x10\x0f\x12\x0f\n\x0bMEMORY_DATA\x10\x1d\x12\x1d\n\x19MULTINOMIAL_LOGISTIC_LOSS\x10\x10\x12\x07\n\x03MVN\x10"\x12\x0b\n\x07POOLING\x10\x11\x12\t\n\x05POWER\x10\x1a\x12\x08\n\x04RELU\x10\x12\x12\x0b\n\x07SIGMOID\x10\x13\x12\x1e\n\x1aSIGMOID_CROSS_ENTROPY_LOSS\x10\x1b\x12\x0b\n\x07SILENCE\x10$\x12\x0b\n\x07SOFTMAX\x10\x14\x12\x10\n\x0cSOFTMAX_LOSS\x10\x15\x12\t\n\x05SPLIT\x10\x16\x12\t\n\x05SLICE\x10!\x12\x08\n\x04TANH\x10\x17\x12\x0f\n\x0bWINDOW_DATA\x10\x18\x12\r\n\tTHRESHOLD\x10\x1f"*\n\x0c\x44imCheckMode\x12\n\n\x06STRICT\x10\x00\x12\x0e\n\nPERMISSIVE\x10\x01"\xfd\x07\n\x10V0LayerParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x12\n\nnum_output\x18\x03 \x01(\r\x12\x16\n\x08\x62iasterm\x18\x04 \x01(\x08:\x04true\x12-\n\rweight_filler\x18\x05 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x06 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x0e\n\x03pad\x18\x07 \x01(\r:\x01\x30\x12\x12\n\nkernelsize\x18\x08 \x01(\r\x12\x10\n\x05group\x18\t \x01(\r:\x01\x31\x12\x11\n\x06stride\x18\n \x01(\r:\x01\x31\x12\x35\n\x04pool\x18\x0b \x01(\x0e\x32".caffe.V0LayerParameter.PoolMethod:\x03MAX\x12\x1a\n\rdropout_ratio\x18\x0c \x01(\x02:\x03\x30.5\x12\x15\n\nlocal_size\x18\r \x01(\r:\x01\x35\x12\x10\n\x05\x61lpha\x18\x0e \x01(\x02:\x01\x31\x12\x12\n\x04\x62\x65ta\x18\x0f \x01(\x02:\x04\x30.75\x12\x0c\n\x01k\x18\x16 \x01(\x02:\x01\x31\x12\x0e\n\x06source\x18\x10 \x01(\t\x12\x10\n\x05scale\x18\x11 \x01(\x02:\x01\x31\x12\x10\n\x08meanfile\x18\x12 \x01(\t\x12\x11\n\tbatchsize\x18\x13 \x01(\r\x12\x13\n\x08\x63ropsize\x18\x14 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x15 \x01(\x08:\x05\x66\x61lse\x12\x1f\n\x05\x62lobs\x18\x32 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x10\n\x08\x62lobs_lr\x18\x33 \x03(\x02\x12\x14\n\x0cweight_decay\x18\x34 \x03(\x02\x12\x14\n\trand_skip\x18\x35 \x01(\r:\x01\x30\x12\x1d\n\x10\x64\x65t_fg_threshold\x18\x36 \x01(\x02:\x03\x30.5\x12\x1d\n\x10\x64\x65t_bg_threshold\x18\x37 \x01(\x02:\x03\x30.5\x12\x1d\n\x0f\x64\x65t_fg_fraction\x18\x38 \x01(\x02:\x04\x30.25\x12\x1a\n\x0f\x64\x65t_context_pad\x18: \x01(\r:\x01\x30\x12\x1b\n\rdet_crop_mode\x18; \x01(\t:\x04warp\x12\x12\n\x07new_num\x18< \x01(\x05:\x01\x30\x12\x17\n\x0cnew_channels\x18= \x01(\x05:\x01\x30\x12\x15\n\nnew_height\x18> \x01(\x05:\x01\x30\x12\x14\n\tnew_width\x18? \x01(\x05:\x01\x30\x12\x1d\n\x0eshuffle_images\x18@ \x01(\x08:\x05\x66\x61lse\x12\x15\n\nconcat_dim\x18\x41 \x01(\r:\x01\x31\x12\x36\n\x11hdf5_output_param\x18\xe9\x07 \x01(\x0b\x32\x1a.caffe.HDF5OutputParameter".\n\nPoolMethod\x12\x07\n\x03MAX\x10\x00\x12\x07\n\x03\x41VE\x10\x01\x12\x0e\n\nSTOCHASTIC\x10\x02"W\n\x0ePReLUParameter\x12&\n\x06\x66iller\x18\x01 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x1d\n\x0e\x63hannel_shared\x18\x02 \x01(\x08:\x05\x66\x61lse*\x1c\n\x05Phase\x12\t\n\x05TRAIN\x10\x00\x12\x08\n\x04TEST\x10\x01'
)

_PHASE = DESCRIPTOR.enum_types_by_name["Phase"]
Phase = enum_type_wrapper.EnumTypeWrapper(_PHASE)
TRAIN = 0
TEST = 1


_BLOBSHAPE = DESCRIPTOR.message_types_by_name["BlobShape"]
_BLOBPROTO = DESCRIPTOR.message_types_by_name["BlobProto"]
_BLOBPROTOVECTOR = DESCRIPTOR.message_types_by_name["BlobProtoVector"]
_DATUM = DESCRIPTOR.message_types_by_name["Datum"]
_LABELMAPITEM = DESCRIPTOR.message_types_by_name["LabelMapItem"]
_LABELMAP = DESCRIPTOR.message_types_by_name["LabelMap"]
_SAMPLER = DESCRIPTOR.message_types_by_name["Sampler"]
_SAMPLECONSTRAINT = DESCRIPTOR.message_types_by_name["SampleConstraint"]
_BATCHSAMPLER = DESCRIPTOR.message_types_by_name["BatchSampler"]
_EMITCONSTRAINT = DESCRIPTOR.message_types_by_name["EmitConstraint"]
_NORMALIZEDBBOX = DESCRIPTOR.message_types_by_name["NormalizedBBox"]
_ANNOTATION = DESCRIPTOR.message_types_by_name["Annotation"]
_ANNOTATIONGROUP = DESCRIPTOR.message_types_by_name["AnnotationGroup"]
_ANNOTATEDDATUM = DESCRIPTOR.message_types_by_name["AnnotatedDatum"]
_FILLERPARAMETER = DESCRIPTOR.message_types_by_name["FillerParameter"]
_NETPARAMETER = DESCRIPTOR.message_types_by_name["NetParameter"]
_SOLVERPARAMETER = DESCRIPTOR.message_types_by_name["SolverParameter"]
_SOLVERSTATE = DESCRIPTOR.message_types_by_name["SolverState"]
_NETSTATE = DESCRIPTOR.message_types_by_name["NetState"]
_NETSTATERULE = DESCRIPTOR.message_types_by_name["NetStateRule"]
_PARAMSPEC = DESCRIPTOR.message_types_by_name["ParamSpec"]
_LAYERPARAMETER = DESCRIPTOR.message_types_by_name["LayerParameter"]
_SPATIALTRANSFORMERPARAMETER = DESCRIPTOR.message_types_by_name["SpatialTransformerParameter"]
_STLOSSPARAMETER = DESCRIPTOR.message_types_by_name["STLossParameter"]
_POWERFILEPARAMETER = DESCRIPTOR.message_types_by_name["PowerFileParameter"]
_LOCLOSSPARAMETER = DESCRIPTOR.message_types_by_name["LocLossParameter"]
_CLIPPARAMETER = DESCRIPTOR.message_types_by_name["ClipParameter"]
_CTCLOSSPARAMETER = DESCRIPTOR.message_types_by_name["CtcLossParameter"]
_CONTINUATIONINDICATORPARAMETER = DESCRIPTOR.message_types_by_name["ContinuationIndicatorParameter"]
_LABELSEQUENCEACCURACYPARAMETER = DESCRIPTOR.message_types_by_name["LabelsequenceAccuracyParameter"]
_SHUFFLECHANNELPARAMETER = DESCRIPTOR.message_types_by_name["ShuffleChannelParameter"]
_INTERPPARAMETER = DESCRIPTOR.message_types_by_name["InterpParameter"]
_RELU6PARAMETER = DESCRIPTOR.message_types_by_name["ReLU6Parameter"]
_AXPYPARAMETER = DESCRIPTOR.message_types_by_name["AxpyParameter"]
_UPSAMPLEPARAMETER = DESCRIPTOR.message_types_by_name["UpsampleParameter"]
_SWISHPARAMETER = DESCRIPTOR.message_types_by_name["SwishParameter"]
_MISHPARAMETER = DESCRIPTOR.message_types_by_name["MishParameter"]
_REORGPARAMETER = DESCRIPTOR.message_types_by_name["ReorgParameter"]
_REVERSEPARAMETER = DESCRIPTOR.message_types_by_name["ReverseParameter"]
_TRANSFORMATIONPARAMETER = DESCRIPTOR.message_types_by_name["TransformationParameter"]
_RESIZEPARAMETER = DESCRIPTOR.message_types_by_name["ResizeParameter"]
_SALTPEPPERPARAMETER = DESCRIPTOR.message_types_by_name["SaltPepperParameter"]
_NOISEPARAMETER = DESCRIPTOR.message_types_by_name["NoiseParameter"]
_DISTORTIONPARAMETER = DESCRIPTOR.message_types_by_name["DistortionParameter"]
_EXPANSIONPARAMETER = DESCRIPTOR.message_types_by_name["ExpansionParameter"]
_LOSSPARAMETER = DESCRIPTOR.message_types_by_name["LossParameter"]
_ACCURACYPARAMETER = DESCRIPTOR.message_types_by_name["AccuracyParameter"]
_ANNOTATEDDATAPARAMETER = DESCRIPTOR.message_types_by_name["AnnotatedDataParameter"]
_ARGMAXPARAMETER = DESCRIPTOR.message_types_by_name["ArgMaxParameter"]
_CONCATPARAMETER = DESCRIPTOR.message_types_by_name["ConcatParameter"]
_BATCHNORMPARAMETER = DESCRIPTOR.message_types_by_name["BatchNormParameter"]
_BIASPARAMETER = DESCRIPTOR.message_types_by_name["BiasParameter"]
_CONTRASTIVELOSSPARAMETER = DESCRIPTOR.message_types_by_name["ContrastiveLossParameter"]
_CONVOLUTIONPARAMETER = DESCRIPTOR.message_types_by_name["ConvolutionParameter"]
_CROPPARAMETER = DESCRIPTOR.message_types_by_name["CropParameter"]
_DATAPARAMETER = DESCRIPTOR.message_types_by_name["DataParameter"]
_DETECTIONEVALUATEPARAMETER = DESCRIPTOR.message_types_by_name["DetectionEvaluateParameter"]
_NONMAXIMUMSUPPRESSIONPARAMETER = DESCRIPTOR.message_types_by_name["NonMaximumSuppressionParameter"]
_SAVEOUTPUTPARAMETER = DESCRIPTOR.message_types_by_name["SaveOutputParameter"]
_DETECTIONOUTPUTPARAMETER = DESCRIPTOR.message_types_by_name["DetectionOutputParameter"]
_DROPOUTPARAMETER = DESCRIPTOR.message_types_by_name["DropoutParameter"]
_DUMMYDATAPARAMETER = DESCRIPTOR.message_types_by_name["DummyDataParameter"]
_ELTWISEPARAMETER = DESCRIPTOR.message_types_by_name["EltwiseParameter"]
_ELUPARAMETER = DESCRIPTOR.message_types_by_name["ELUParameter"]
_EMBEDPARAMETER = DESCRIPTOR.message_types_by_name["EmbedParameter"]
_EXPPARAMETER = DESCRIPTOR.message_types_by_name["ExpParameter"]
_FLATTENPARAMETER = DESCRIPTOR.message_types_by_name["FlattenParameter"]
_HDF5DATAPARAMETER = DESCRIPTOR.message_types_by_name["HDF5DataParameter"]
_HDF5OUTPUTPARAMETER = DESCRIPTOR.message_types_by_name["HDF5OutputParameter"]
_HINGELOSSPARAMETER = DESCRIPTOR.message_types_by_name["HingeLossParameter"]
_IMAGEDATAPARAMETER = DESCRIPTOR.message_types_by_name["ImageDataParameter"]
_INFOGAINLOSSPARAMETER = DESCRIPTOR.message_types_by_name["InfogainLossParameter"]
_INNERPRODUCTPARAMETER = DESCRIPTOR.message_types_by_name["InnerProductParameter"]
_INPUTPARAMETER = DESCRIPTOR.message_types_by_name["InputParameter"]
_LOGPARAMETER = DESCRIPTOR.message_types_by_name["LogParameter"]
_LRNPARAMETER = DESCRIPTOR.message_types_by_name["LRNParameter"]
_MEMORYDATAPARAMETER = DESCRIPTOR.message_types_by_name["MemoryDataParameter"]
_MULTIBOXLOSSPARAMETER = DESCRIPTOR.message_types_by_name["MultiBoxLossParameter"]
_MVNPARAMETER = DESCRIPTOR.message_types_by_name["MVNParameter"]
_NORMALIZEPARAMETER = DESCRIPTOR.message_types_by_name["NormalizeParameter"]
_PARAMETERPARAMETER = DESCRIPTOR.message_types_by_name["ParameterParameter"]
_PERMUTEPARAMETER = DESCRIPTOR.message_types_by_name["PermuteParameter"]
_POOLINGPARAMETER = DESCRIPTOR.message_types_by_name["PoolingParameter"]
_POWERPARAMETER = DESCRIPTOR.message_types_by_name["PowerParameter"]
_PRIORBOXPARAMETER = DESCRIPTOR.message_types_by_name["PriorBoxParameter"]
_PROPOSALPARAMETER = DESCRIPTOR.message_types_by_name["ProposalParameter"]
_PYTHONPARAMETER = DESCRIPTOR.message_types_by_name["PythonParameter"]
_RECURRENTPARAMETER = DESCRIPTOR.message_types_by_name["RecurrentParameter"]
_REDUCTIONPARAMETER = DESCRIPTOR.message_types_by_name["ReductionParameter"]
_RELUPARAMETER = DESCRIPTOR.message_types_by_name["ReLUParameter"]
_RESHAPEPARAMETER = DESCRIPTOR.message_types_by_name["ReshapeParameter"]
_ROIALIGNPARAMETER = DESCRIPTOR.message_types_by_name["ROIAlignParameter"]
_SCALEPARAMETER = DESCRIPTOR.message_types_by_name["ScaleParameter"]
_SIGMOIDPARAMETER = DESCRIPTOR.message_types_by_name["SigmoidParameter"]
_SLICEPARAMETER = DESCRIPTOR.message_types_by_name["SliceParameter"]
_SOFTMAXPARAMETER = DESCRIPTOR.message_types_by_name["SoftmaxParameter"]
_TANHPARAMETER = DESCRIPTOR.message_types_by_name["TanHParameter"]
_TILEPARAMETER = DESCRIPTOR.message_types_by_name["TileParameter"]
_THRESHOLDPARAMETER = DESCRIPTOR.message_types_by_name["ThresholdParameter"]
_VIDEODATAPARAMETER = DESCRIPTOR.message_types_by_name["VideoDataParameter"]
_WINDOWDATAPARAMETER = DESCRIPTOR.message_types_by_name["WindowDataParameter"]
_SPPPARAMETER = DESCRIPTOR.message_types_by_name["SPPParameter"]
_V1LAYERPARAMETER = DESCRIPTOR.message_types_by_name["V1LayerParameter"]
_V0LAYERPARAMETER = DESCRIPTOR.message_types_by_name["V0LayerParameter"]
_PRELUPARAMETER = DESCRIPTOR.message_types_by_name["PReLUParameter"]
_EMITCONSTRAINT_EMITTYPE = _EMITCONSTRAINT.enum_types_by_name["EmitType"]
_ANNOTATEDDATUM_ANNOTATIONTYPE = _ANNOTATEDDATUM.enum_types_by_name["AnnotationType"]
_FILLERPARAMETER_VARIANCENORM = _FILLERPARAMETER.enum_types_by_name["VarianceNorm"]
_SOLVERPARAMETER_SNAPSHOTFORMAT = _SOLVERPARAMETER.enum_types_by_name["SnapshotFormat"]
_SOLVERPARAMETER_SOLVERMODE = _SOLVERPARAMETER.enum_types_by_name["SolverMode"]
_SOLVERPARAMETER_SOLVERTYPE = _SOLVERPARAMETER.enum_types_by_name["SolverType"]
_PARAMSPEC_DIMCHECKMODE = _PARAMSPEC.enum_types_by_name["DimCheckMode"]
_MISHPARAMETER_ENGINE = _MISHPARAMETER.enum_types_by_name["Engine"]
_RESIZEPARAMETER_RESIZE_MODE = _RESIZEPARAMETER.enum_types_by_name["Resize_mode"]
_RESIZEPARAMETER_PAD_MODE = _RESIZEPARAMETER.enum_types_by_name["Pad_mode"]
_RESIZEPARAMETER_INTERP_MODE = _RESIZEPARAMETER.enum_types_by_name["Interp_mode"]
_LOSSPARAMETER_NORMALIZATIONMODE = _LOSSPARAMETER.enum_types_by_name["NormalizationMode"]
_CONVOLUTIONPARAMETER_ENGINE = _CONVOLUTIONPARAMETER.enum_types_by_name["Engine"]
_DATAPARAMETER_DB = _DATAPARAMETER.enum_types_by_name["DB"]
_ELTWISEPARAMETER_ELTWISEOP = _ELTWISEPARAMETER.enum_types_by_name["EltwiseOp"]
_HINGELOSSPARAMETER_NORM = _HINGELOSSPARAMETER.enum_types_by_name["Norm"]
_LRNPARAMETER_NORMREGION = _LRNPARAMETER.enum_types_by_name["NormRegion"]
_LRNPARAMETER_ENGINE = _LRNPARAMETER.enum_types_by_name["Engine"]
_MULTIBOXLOSSPARAMETER_LOCLOSSTYPE = _MULTIBOXLOSSPARAMETER.enum_types_by_name["LocLossType"]
_MULTIBOXLOSSPARAMETER_CONFLOSSTYPE = _MULTIBOXLOSSPARAMETER.enum_types_by_name["ConfLossType"]
_MULTIBOXLOSSPARAMETER_MATCHTYPE = _MULTIBOXLOSSPARAMETER.enum_types_by_name["MatchType"]
_MULTIBOXLOSSPARAMETER_MININGTYPE = _MULTIBOXLOSSPARAMETER.enum_types_by_name["MiningType"]
_POOLINGPARAMETER_POOLMETHOD = _POOLINGPARAMETER.enum_types_by_name["PoolMethod"]
_POOLINGPARAMETER_ENGINE = _POOLINGPARAMETER.enum_types_by_name["Engine"]
_POOLINGPARAMETER_ROUNDMODE = _POOLINGPARAMETER.enum_types_by_name["RoundMode"]
_PRIORBOXPARAMETER_CODETYPE = _PRIORBOXPARAMETER.enum_types_by_name["CodeType"]
_REDUCTIONPARAMETER_REDUCTIONOP = _REDUCTIONPARAMETER.enum_types_by_name["ReductionOp"]
_RELUPARAMETER_ENGINE = _RELUPARAMETER.enum_types_by_name["Engine"]
_SIGMOIDPARAMETER_ENGINE = _SIGMOIDPARAMETER.enum_types_by_name["Engine"]
_SOFTMAXPARAMETER_ENGINE = _SOFTMAXPARAMETER.enum_types_by_name["Engine"]
_TANHPARAMETER_ENGINE = _TANHPARAMETER.enum_types_by_name["Engine"]
_VIDEODATAPARAMETER_VIDEOTYPE = _VIDEODATAPARAMETER.enum_types_by_name["VideoType"]
_SPPPARAMETER_POOLMETHOD = _SPPPARAMETER.enum_types_by_name["PoolMethod"]
_SPPPARAMETER_ENGINE = _SPPPARAMETER.enum_types_by_name["Engine"]
_V1LAYERPARAMETER_LAYERTYPE = _V1LAYERPARAMETER.enum_types_by_name["LayerType"]
_V1LAYERPARAMETER_DIMCHECKMODE = _V1LAYERPARAMETER.enum_types_by_name["DimCheckMode"]
_V0LAYERPARAMETER_POOLMETHOD = _V0LAYERPARAMETER.enum_types_by_name["PoolMethod"]
BlobShape = _reflection.GeneratedProtocolMessageType(
    "BlobShape",
    (_message.Message,),
    {
        "DESCRIPTOR": _BLOBSHAPE,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.BlobShape)
    },
)
_sym_db.RegisterMessage(BlobShape)

BlobProto = _reflection.GeneratedProtocolMessageType(
    "BlobProto",
    (_message.Message,),
    {
        "DESCRIPTOR": _BLOBPROTO,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.BlobProto)
    },
)
_sym_db.RegisterMessage(BlobProto)

BlobProtoVector = _reflection.GeneratedProtocolMessageType(
    "BlobProtoVector",
    (_message.Message,),
    {
        "DESCRIPTOR": _BLOBPROTOVECTOR,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.BlobProtoVector)
    },
)
_sym_db.RegisterMessage(BlobProtoVector)

Datum = _reflection.GeneratedProtocolMessageType(
    "Datum",
    (_message.Message,),
    {
        "DESCRIPTOR": _DATUM,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.Datum)
    },
)
_sym_db.RegisterMessage(Datum)

LabelMapItem = _reflection.GeneratedProtocolMessageType(
    "LabelMapItem",
    (_message.Message,),
    {
        "DESCRIPTOR": _LABELMAPITEM,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.LabelMapItem)
    },
)
_sym_db.RegisterMessage(LabelMapItem)

LabelMap = _reflection.GeneratedProtocolMessageType(
    "LabelMap",
    (_message.Message,),
    {
        "DESCRIPTOR": _LABELMAP,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.LabelMap)
    },
)
_sym_db.RegisterMessage(LabelMap)

Sampler = _reflection.GeneratedProtocolMessageType(
    "Sampler",
    (_message.Message,),
    {
        "DESCRIPTOR": _SAMPLER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.Sampler)
    },
)
_sym_db.RegisterMessage(Sampler)

SampleConstraint = _reflection.GeneratedProtocolMessageType(
    "SampleConstraint",
    (_message.Message,),
    {
        "DESCRIPTOR": _SAMPLECONSTRAINT,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.SampleConstraint)
    },
)
_sym_db.RegisterMessage(SampleConstraint)

BatchSampler = _reflection.GeneratedProtocolMessageType(
    "BatchSampler",
    (_message.Message,),
    {
        "DESCRIPTOR": _BATCHSAMPLER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.BatchSampler)
    },
)
_sym_db.RegisterMessage(BatchSampler)

EmitConstraint = _reflection.GeneratedProtocolMessageType(
    "EmitConstraint",
    (_message.Message,),
    {
        "DESCRIPTOR": _EMITCONSTRAINT,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.EmitConstraint)
    },
)
_sym_db.RegisterMessage(EmitConstraint)

NormalizedBBox = _reflection.GeneratedProtocolMessageType(
    "NormalizedBBox",
    (_message.Message,),
    {
        "DESCRIPTOR": _NORMALIZEDBBOX,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.NormalizedBBox)
    },
)
_sym_db.RegisterMessage(NormalizedBBox)

Annotation = _reflection.GeneratedProtocolMessageType(
    "Annotation",
    (_message.Message,),
    {
        "DESCRIPTOR": _ANNOTATION,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.Annotation)
    },
)
_sym_db.RegisterMessage(Annotation)

AnnotationGroup = _reflection.GeneratedProtocolMessageType(
    "AnnotationGroup",
    (_message.Message,),
    {
        "DESCRIPTOR": _ANNOTATIONGROUP,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.AnnotationGroup)
    },
)
_sym_db.RegisterMessage(AnnotationGroup)

AnnotatedDatum = _reflection.GeneratedProtocolMessageType(
    "AnnotatedDatum",
    (_message.Message,),
    {
        "DESCRIPTOR": _ANNOTATEDDATUM,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.AnnotatedDatum)
    },
)
_sym_db.RegisterMessage(AnnotatedDatum)

FillerParameter = _reflection.GeneratedProtocolMessageType(
    "FillerParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _FILLERPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.FillerParameter)
    },
)
_sym_db.RegisterMessage(FillerParameter)

NetParameter = _reflection.GeneratedProtocolMessageType(
    "NetParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _NETPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.NetParameter)
    },
)
_sym_db.RegisterMessage(NetParameter)

SolverParameter = _reflection.GeneratedProtocolMessageType(
    "SolverParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _SOLVERPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.SolverParameter)
    },
)
_sym_db.RegisterMessage(SolverParameter)

SolverState = _reflection.GeneratedProtocolMessageType(
    "SolverState",
    (_message.Message,),
    {
        "DESCRIPTOR": _SOLVERSTATE,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.SolverState)
    },
)
_sym_db.RegisterMessage(SolverState)

NetState = _reflection.GeneratedProtocolMessageType(
    "NetState",
    (_message.Message,),
    {
        "DESCRIPTOR": _NETSTATE,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.NetState)
    },
)
_sym_db.RegisterMessage(NetState)

NetStateRule = _reflection.GeneratedProtocolMessageType(
    "NetStateRule",
    (_message.Message,),
    {
        "DESCRIPTOR": _NETSTATERULE,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.NetStateRule)
    },
)
_sym_db.RegisterMessage(NetStateRule)

ParamSpec = _reflection.GeneratedProtocolMessageType(
    "ParamSpec",
    (_message.Message,),
    {
        "DESCRIPTOR": _PARAMSPEC,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ParamSpec)
    },
)
_sym_db.RegisterMessage(ParamSpec)

LayerParameter = _reflection.GeneratedProtocolMessageType(
    "LayerParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _LAYERPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.LayerParameter)
    },
)
_sym_db.RegisterMessage(LayerParameter)

SpatialTransformerParameter = _reflection.GeneratedProtocolMessageType(
    "SpatialTransformerParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _SPATIALTRANSFORMERPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.SpatialTransformerParameter)
    },
)
_sym_db.RegisterMessage(SpatialTransformerParameter)

STLossParameter = _reflection.GeneratedProtocolMessageType(
    "STLossParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _STLOSSPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.STLossParameter)
    },
)
_sym_db.RegisterMessage(STLossParameter)

PowerFileParameter = _reflection.GeneratedProtocolMessageType(
    "PowerFileParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _POWERFILEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.PowerFileParameter)
    },
)
_sym_db.RegisterMessage(PowerFileParameter)

LocLossParameter = _reflection.GeneratedProtocolMessageType(
    "LocLossParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _LOCLOSSPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.LocLossParameter)
    },
)
_sym_db.RegisterMessage(LocLossParameter)

ClipParameter = _reflection.GeneratedProtocolMessageType(
    "ClipParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _CLIPPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ClipParameter)
    },
)
_sym_db.RegisterMessage(ClipParameter)

CtcLossParameter = _reflection.GeneratedProtocolMessageType(
    "CtcLossParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _CTCLOSSPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.CtcLossParameter)
    },
)
_sym_db.RegisterMessage(CtcLossParameter)

ContinuationIndicatorParameter = _reflection.GeneratedProtocolMessageType(
    "ContinuationIndicatorParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _CONTINUATIONINDICATORPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ContinuationIndicatorParameter)
    },
)
_sym_db.RegisterMessage(ContinuationIndicatorParameter)

LabelsequenceAccuracyParameter = _reflection.GeneratedProtocolMessageType(
    "LabelsequenceAccuracyParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _LABELSEQUENCEACCURACYPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.LabelsequenceAccuracyParameter)
    },
)
_sym_db.RegisterMessage(LabelsequenceAccuracyParameter)

ShuffleChannelParameter = _reflection.GeneratedProtocolMessageType(
    "ShuffleChannelParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _SHUFFLECHANNELPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ShuffleChannelParameter)
    },
)
_sym_db.RegisterMessage(ShuffleChannelParameter)

InterpParameter = _reflection.GeneratedProtocolMessageType(
    "InterpParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _INTERPPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.InterpParameter)
    },
)
_sym_db.RegisterMessage(InterpParameter)

ReLU6Parameter = _reflection.GeneratedProtocolMessageType(
    "ReLU6Parameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _RELU6PARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ReLU6Parameter)
    },
)
_sym_db.RegisterMessage(ReLU6Parameter)

AxpyParameter = _reflection.GeneratedProtocolMessageType(
    "AxpyParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _AXPYPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.AxpyParameter)
    },
)
_sym_db.RegisterMessage(AxpyParameter)

UpsampleParameter = _reflection.GeneratedProtocolMessageType(
    "UpsampleParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _UPSAMPLEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.UpsampleParameter)
    },
)
_sym_db.RegisterMessage(UpsampleParameter)

SwishParameter = _reflection.GeneratedProtocolMessageType(
    "SwishParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _SWISHPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.SwishParameter)
    },
)
_sym_db.RegisterMessage(SwishParameter)

MishParameter = _reflection.GeneratedProtocolMessageType(
    "MishParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _MISHPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.MishParameter)
    },
)
_sym_db.RegisterMessage(MishParameter)

ReorgParameter = _reflection.GeneratedProtocolMessageType(
    "ReorgParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _REORGPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ReorgParameter)
    },
)
_sym_db.RegisterMessage(ReorgParameter)

ReverseParameter = _reflection.GeneratedProtocolMessageType(
    "ReverseParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _REVERSEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ReverseParameter)
    },
)
_sym_db.RegisterMessage(ReverseParameter)

TransformationParameter = _reflection.GeneratedProtocolMessageType(
    "TransformationParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _TRANSFORMATIONPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.TransformationParameter)
    },
)
_sym_db.RegisterMessage(TransformationParameter)

ResizeParameter = _reflection.GeneratedProtocolMessageType(
    "ResizeParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _RESIZEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ResizeParameter)
    },
)
_sym_db.RegisterMessage(ResizeParameter)

SaltPepperParameter = _reflection.GeneratedProtocolMessageType(
    "SaltPepperParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _SALTPEPPERPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.SaltPepperParameter)
    },
)
_sym_db.RegisterMessage(SaltPepperParameter)

NoiseParameter = _reflection.GeneratedProtocolMessageType(
    "NoiseParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _NOISEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.NoiseParameter)
    },
)
_sym_db.RegisterMessage(NoiseParameter)

DistortionParameter = _reflection.GeneratedProtocolMessageType(
    "DistortionParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _DISTORTIONPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.DistortionParameter)
    },
)
_sym_db.RegisterMessage(DistortionParameter)

ExpansionParameter = _reflection.GeneratedProtocolMessageType(
    "ExpansionParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _EXPANSIONPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ExpansionParameter)
    },
)
_sym_db.RegisterMessage(ExpansionParameter)

LossParameter = _reflection.GeneratedProtocolMessageType(
    "LossParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _LOSSPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.LossParameter)
    },
)
_sym_db.RegisterMessage(LossParameter)

AccuracyParameter = _reflection.GeneratedProtocolMessageType(
    "AccuracyParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _ACCURACYPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.AccuracyParameter)
    },
)
_sym_db.RegisterMessage(AccuracyParameter)

AnnotatedDataParameter = _reflection.GeneratedProtocolMessageType(
    "AnnotatedDataParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _ANNOTATEDDATAPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.AnnotatedDataParameter)
    },
)
_sym_db.RegisterMessage(AnnotatedDataParameter)

ArgMaxParameter = _reflection.GeneratedProtocolMessageType(
    "ArgMaxParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _ARGMAXPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ArgMaxParameter)
    },
)
_sym_db.RegisterMessage(ArgMaxParameter)

ConcatParameter = _reflection.GeneratedProtocolMessageType(
    "ConcatParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _CONCATPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ConcatParameter)
    },
)
_sym_db.RegisterMessage(ConcatParameter)

BatchNormParameter = _reflection.GeneratedProtocolMessageType(
    "BatchNormParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _BATCHNORMPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.BatchNormParameter)
    },
)
_sym_db.RegisterMessage(BatchNormParameter)

BiasParameter = _reflection.GeneratedProtocolMessageType(
    "BiasParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _BIASPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.BiasParameter)
    },
)
_sym_db.RegisterMessage(BiasParameter)

ContrastiveLossParameter = _reflection.GeneratedProtocolMessageType(
    "ContrastiveLossParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _CONTRASTIVELOSSPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ContrastiveLossParameter)
    },
)
_sym_db.RegisterMessage(ContrastiveLossParameter)

ConvolutionParameter = _reflection.GeneratedProtocolMessageType(
    "ConvolutionParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _CONVOLUTIONPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ConvolutionParameter)
    },
)
_sym_db.RegisterMessage(ConvolutionParameter)

CropParameter = _reflection.GeneratedProtocolMessageType(
    "CropParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _CROPPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.CropParameter)
    },
)
_sym_db.RegisterMessage(CropParameter)

DataParameter = _reflection.GeneratedProtocolMessageType(
    "DataParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _DATAPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.DataParameter)
    },
)
_sym_db.RegisterMessage(DataParameter)

DetectionEvaluateParameter = _reflection.GeneratedProtocolMessageType(
    "DetectionEvaluateParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _DETECTIONEVALUATEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.DetectionEvaluateParameter)
    },
)
_sym_db.RegisterMessage(DetectionEvaluateParameter)

NonMaximumSuppressionParameter = _reflection.GeneratedProtocolMessageType(
    "NonMaximumSuppressionParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _NONMAXIMUMSUPPRESSIONPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.NonMaximumSuppressionParameter)
    },
)
_sym_db.RegisterMessage(NonMaximumSuppressionParameter)

SaveOutputParameter = _reflection.GeneratedProtocolMessageType(
    "SaveOutputParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _SAVEOUTPUTPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.SaveOutputParameter)
    },
)
_sym_db.RegisterMessage(SaveOutputParameter)

DetectionOutputParameter = _reflection.GeneratedProtocolMessageType(
    "DetectionOutputParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _DETECTIONOUTPUTPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.DetectionOutputParameter)
    },
)
_sym_db.RegisterMessage(DetectionOutputParameter)

DropoutParameter = _reflection.GeneratedProtocolMessageType(
    "DropoutParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _DROPOUTPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.DropoutParameter)
    },
)
_sym_db.RegisterMessage(DropoutParameter)

DummyDataParameter = _reflection.GeneratedProtocolMessageType(
    "DummyDataParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _DUMMYDATAPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.DummyDataParameter)
    },
)
_sym_db.RegisterMessage(DummyDataParameter)

EltwiseParameter = _reflection.GeneratedProtocolMessageType(
    "EltwiseParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _ELTWISEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.EltwiseParameter)
    },
)
_sym_db.RegisterMessage(EltwiseParameter)

ELUParameter = _reflection.GeneratedProtocolMessageType(
    "ELUParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _ELUPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ELUParameter)
    },
)
_sym_db.RegisterMessage(ELUParameter)

EmbedParameter = _reflection.GeneratedProtocolMessageType(
    "EmbedParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _EMBEDPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.EmbedParameter)
    },
)
_sym_db.RegisterMessage(EmbedParameter)

ExpParameter = _reflection.GeneratedProtocolMessageType(
    "ExpParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _EXPPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ExpParameter)
    },
)
_sym_db.RegisterMessage(ExpParameter)

FlattenParameter = _reflection.GeneratedProtocolMessageType(
    "FlattenParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _FLATTENPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.FlattenParameter)
    },
)
_sym_db.RegisterMessage(FlattenParameter)

HDF5DataParameter = _reflection.GeneratedProtocolMessageType(
    "HDF5DataParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _HDF5DATAPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.HDF5DataParameter)
    },
)
_sym_db.RegisterMessage(HDF5DataParameter)

HDF5OutputParameter = _reflection.GeneratedProtocolMessageType(
    "HDF5OutputParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _HDF5OUTPUTPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.HDF5OutputParameter)
    },
)
_sym_db.RegisterMessage(HDF5OutputParameter)

HingeLossParameter = _reflection.GeneratedProtocolMessageType(
    "HingeLossParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _HINGELOSSPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.HingeLossParameter)
    },
)
_sym_db.RegisterMessage(HingeLossParameter)

ImageDataParameter = _reflection.GeneratedProtocolMessageType(
    "ImageDataParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _IMAGEDATAPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ImageDataParameter)
    },
)
_sym_db.RegisterMessage(ImageDataParameter)

InfogainLossParameter = _reflection.GeneratedProtocolMessageType(
    "InfogainLossParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _INFOGAINLOSSPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.InfogainLossParameter)
    },
)
_sym_db.RegisterMessage(InfogainLossParameter)

InnerProductParameter = _reflection.GeneratedProtocolMessageType(
    "InnerProductParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _INNERPRODUCTPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.InnerProductParameter)
    },
)
_sym_db.RegisterMessage(InnerProductParameter)

InputParameter = _reflection.GeneratedProtocolMessageType(
    "InputParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _INPUTPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.InputParameter)
    },
)
_sym_db.RegisterMessage(InputParameter)

LogParameter = _reflection.GeneratedProtocolMessageType(
    "LogParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _LOGPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.LogParameter)
    },
)
_sym_db.RegisterMessage(LogParameter)

LRNParameter = _reflection.GeneratedProtocolMessageType(
    "LRNParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _LRNPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.LRNParameter)
    },
)
_sym_db.RegisterMessage(LRNParameter)

MemoryDataParameter = _reflection.GeneratedProtocolMessageType(
    "MemoryDataParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _MEMORYDATAPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.MemoryDataParameter)
    },
)
_sym_db.RegisterMessage(MemoryDataParameter)

MultiBoxLossParameter = _reflection.GeneratedProtocolMessageType(
    "MultiBoxLossParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _MULTIBOXLOSSPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.MultiBoxLossParameter)
    },
)
_sym_db.RegisterMessage(MultiBoxLossParameter)

MVNParameter = _reflection.GeneratedProtocolMessageType(
    "MVNParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _MVNPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.MVNParameter)
    },
)
_sym_db.RegisterMessage(MVNParameter)

NormalizeParameter = _reflection.GeneratedProtocolMessageType(
    "NormalizeParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _NORMALIZEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.NormalizeParameter)
    },
)
_sym_db.RegisterMessage(NormalizeParameter)

ParameterParameter = _reflection.GeneratedProtocolMessageType(
    "ParameterParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _PARAMETERPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ParameterParameter)
    },
)
_sym_db.RegisterMessage(ParameterParameter)

PermuteParameter = _reflection.GeneratedProtocolMessageType(
    "PermuteParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _PERMUTEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.PermuteParameter)
    },
)
_sym_db.RegisterMessage(PermuteParameter)

PoolingParameter = _reflection.GeneratedProtocolMessageType(
    "PoolingParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _POOLINGPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.PoolingParameter)
    },
)
_sym_db.RegisterMessage(PoolingParameter)

PowerParameter = _reflection.GeneratedProtocolMessageType(
    "PowerParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _POWERPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.PowerParameter)
    },
)
_sym_db.RegisterMessage(PowerParameter)

PriorBoxParameter = _reflection.GeneratedProtocolMessageType(
    "PriorBoxParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _PRIORBOXPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.PriorBoxParameter)
    },
)
_sym_db.RegisterMessage(PriorBoxParameter)

ProposalParameter = _reflection.GeneratedProtocolMessageType(
    "ProposalParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _PROPOSALPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ProposalParameter)
    },
)
_sym_db.RegisterMessage(ProposalParameter)

PythonParameter = _reflection.GeneratedProtocolMessageType(
    "PythonParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _PYTHONPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.PythonParameter)
    },
)
_sym_db.RegisterMessage(PythonParameter)

RecurrentParameter = _reflection.GeneratedProtocolMessageType(
    "RecurrentParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _RECURRENTPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.RecurrentParameter)
    },
)
_sym_db.RegisterMessage(RecurrentParameter)

ReductionParameter = _reflection.GeneratedProtocolMessageType(
    "ReductionParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _REDUCTIONPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ReductionParameter)
    },
)
_sym_db.RegisterMessage(ReductionParameter)

ReLUParameter = _reflection.GeneratedProtocolMessageType(
    "ReLUParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _RELUPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ReLUParameter)
    },
)
_sym_db.RegisterMessage(ReLUParameter)

ReshapeParameter = _reflection.GeneratedProtocolMessageType(
    "ReshapeParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _RESHAPEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ReshapeParameter)
    },
)
_sym_db.RegisterMessage(ReshapeParameter)

ROIAlignParameter = _reflection.GeneratedProtocolMessageType(
    "ROIAlignParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _ROIALIGNPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ROIAlignParameter)
    },
)
_sym_db.RegisterMessage(ROIAlignParameter)

ScaleParameter = _reflection.GeneratedProtocolMessageType(
    "ScaleParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _SCALEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ScaleParameter)
    },
)
_sym_db.RegisterMessage(ScaleParameter)

SigmoidParameter = _reflection.GeneratedProtocolMessageType(
    "SigmoidParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _SIGMOIDPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.SigmoidParameter)
    },
)
_sym_db.RegisterMessage(SigmoidParameter)

SliceParameter = _reflection.GeneratedProtocolMessageType(
    "SliceParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _SLICEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.SliceParameter)
    },
)
_sym_db.RegisterMessage(SliceParameter)

SoftmaxParameter = _reflection.GeneratedProtocolMessageType(
    "SoftmaxParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _SOFTMAXPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.SoftmaxParameter)
    },
)
_sym_db.RegisterMessage(SoftmaxParameter)

TanHParameter = _reflection.GeneratedProtocolMessageType(
    "TanHParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _TANHPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.TanHParameter)
    },
)
_sym_db.RegisterMessage(TanHParameter)

TileParameter = _reflection.GeneratedProtocolMessageType(
    "TileParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _TILEPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.TileParameter)
    },
)
_sym_db.RegisterMessage(TileParameter)

ThresholdParameter = _reflection.GeneratedProtocolMessageType(
    "ThresholdParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _THRESHOLDPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.ThresholdParameter)
    },
)
_sym_db.RegisterMessage(ThresholdParameter)

VideoDataParameter = _reflection.GeneratedProtocolMessageType(
    "VideoDataParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _VIDEODATAPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.VideoDataParameter)
    },
)
_sym_db.RegisterMessage(VideoDataParameter)

WindowDataParameter = _reflection.GeneratedProtocolMessageType(
    "WindowDataParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _WINDOWDATAPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.WindowDataParameter)
    },
)
_sym_db.RegisterMessage(WindowDataParameter)

SPPParameter = _reflection.GeneratedProtocolMessageType(
    "SPPParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _SPPPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.SPPParameter)
    },
)
_sym_db.RegisterMessage(SPPParameter)

V1LayerParameter = _reflection.GeneratedProtocolMessageType(
    "V1LayerParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _V1LAYERPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.V1LayerParameter)
    },
)
_sym_db.RegisterMessage(V1LayerParameter)

V0LayerParameter = _reflection.GeneratedProtocolMessageType(
    "V0LayerParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _V0LAYERPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.V0LayerParameter)
    },
)
_sym_db.RegisterMessage(V0LayerParameter)

PReLUParameter = _reflection.GeneratedProtocolMessageType(
    "PReLUParameter",
    (_message.Message,),
    {
        "DESCRIPTOR": _PRELUPARAMETER,
        "__module__": "caffe2onnx.proto.caffe_pb2"
        # @@protoc_insertion_point(class_scope:caffe.PReLUParameter)
    },
)
_sym_db.RegisterMessage(PReLUParameter)

if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    _BLOBSHAPE.fields_by_name["dim"]._options = None
    _BLOBSHAPE.fields_by_name["dim"]._serialized_options = b"\020\001"
    _BLOBPROTO.fields_by_name["data"]._options = None
    _BLOBPROTO.fields_by_name["data"]._serialized_options = b"\020\001"
    _BLOBPROTO.fields_by_name["diff"]._options = None
    _BLOBPROTO.fields_by_name["diff"]._serialized_options = b"\020\001"
    _BLOBPROTO.fields_by_name["double_data"]._options = None
    _BLOBPROTO.fields_by_name["double_data"]._serialized_options = b"\020\001"
    _BLOBPROTO.fields_by_name["double_diff"]._options = None
    _BLOBPROTO.fields_by_name["double_diff"]._serialized_options = b"\020\001"
    _PHASE._serialized_start = 24507
    _PHASE._serialized_end = 24535
    _BLOBSHAPE._serialized_start = 39
    _BLOBSHAPE._serialized_end = 67
    _BLOBPROTO._serialized_start = 70
    _BLOBPROTO._serialized_end = 274
    _BLOBPROTOVECTOR._serialized_start = 276
    _BLOBPROTOVECTOR._serialized_end = 326
    _DATUM._serialized_start = 329
    _DATUM._serialized_end = 458
    _LABELMAPITEM._serialized_start = 460
    _LABELMAPITEM._serialized_end = 525
    _LABELMAP._serialized_start = 527
    _LABELMAP._serialized_end = 572
    _SAMPLER._serialized_start = 574
    _SAMPLER._serialized_end = 685
    _SAMPLECONSTRAINT._serialized_start = 688
    _SAMPLECONSTRAINT._serialized_end = 880
    _BATCHSAMPLER._serialized_start = 883
    _BATCHSAMPLER._serialized_end = 1061
    _EMITCONSTRAINT._serialized_start = 1064
    _EMITCONSTRAINT._serialized_end = 1202
    _EMITCONSTRAINT_EMITTYPE._serialized_start = 1163
    _EMITCONSTRAINT_EMITTYPE._serialized_end = 1202
    _NORMALIZEDBBOX._serialized_start = 1205
    _NORMALIZEDBBOX._serialized_end = 1340
    _ANNOTATION._serialized_start = 1342
    _ANNOTATION._serialized_end = 1415
    _ANNOTATIONGROUP._serialized_start = 1417
    _ANNOTATIONGROUP._serialized_end = 1494
    _ANNOTATEDDATUM._serialized_start = 1497
    _ANNOTATEDDATUM._serialized_end = 1672
    _ANNOTATEDDATUM_ANNOTATIONTYPE._serialized_start = 1646
    _ANNOTATEDDATUM_ANNOTATIONTYPE._serialized_end = 1672
    _FILLERPARAMETER._serialized_start = 1675
    _FILLERPARAMETER._serialized_end = 1941
    _FILLERPARAMETER_VARIANCENORM._serialized_start = 1889
    _FILLERPARAMETER_VARIANCENORM._serialized_end = 1941
    _NETPARAMETER._serialized_start = 1944
    _NETPARAMETER._serialized_end = 2214
    _SOLVERPARAMETER._serialized_start = 2217
    _SOLVERPARAMETER._serialized_end = 3659
    _SOLVERPARAMETER_SNAPSHOTFORMAT._serialized_start = 3497
    _SOLVERPARAMETER_SNAPSHOTFORMAT._serialized_end = 3540
    _SOLVERPARAMETER_SOLVERMODE._serialized_start = 3542
    _SOLVERPARAMETER_SOLVERMODE._serialized_end = 3572
    _SOLVERPARAMETER_SOLVERTYPE._serialized_start = 3574
    _SOLVERPARAMETER_SOLVERTYPE._serialized_end = 3659
    _SOLVERSTATE._serialized_start = 3662
    _SOLVERSTATE._serialized_end = 3827
    _NETSTATE._serialized_start = 3829
    _NETSTATE._serialized_end = 3907
    _NETSTATERULE._serialized_start = 3909
    _NETSTATERULE._serialized_end = 4024
    _PARAMSPEC._serialized_start = 4027
    _PARAMSPEC._serialized_end = 4190
    _PARAMSPEC_DIMCHECKMODE._serialized_start = 4148
    _PARAMSPEC_DIMCHECKMODE._serialized_end = 4190
    _LAYERPARAMETER._serialized_start = 4193
    _LAYERPARAMETER._serialized_end = 8207
    _SPATIALTRANSFORMERPARAMETER._serialized_start = 8210
    _SPATIALTRANSFORMERPARAMETER._serialized_end = 8482
    _STLOSSPARAMETER._serialized_start = 8484
    _STLOSSPARAMETER._serialized_end = 8537
    _POWERFILEPARAMETER._serialized_start = 8539
    _POWERFILEPARAMETER._serialized_end = 8579
    _LOCLOSSPARAMETER._serialized_start = 8581
    _LOCLOSSPARAMETER._serialized_end = 8618
    _CLIPPARAMETER._serialized_start = 8620
    _CLIPPARAMETER._serialized_end = 8661
    _CTCLOSSPARAMETER._serialized_start = 8663
    _CTCLOSSPARAMETER._serialized_end = 8753
    _CONTINUATIONINDICATORPARAMETER._serialized_start = 8755
    _CONTINUATIONINDICATORPARAMETER._serialized_end = 8832
    _LABELSEQUENCEACCURACYPARAMETER._serialized_start = 8834
    _LABELSEQUENCEACCURACYPARAMETER._serialized_end = 8890
    _SHUFFLECHANNELPARAMETER._serialized_start = 8892
    _SHUFFLECHANNELPARAMETER._serialized_end = 8935
    _INTERPPARAMETER._serialized_start = 8938
    _INTERPPARAMETER._serialized_end = 9082
    _RELU6PARAMETER._serialized_start = 9084
    _RELU6PARAMETER._serialized_end = 9127
    _AXPYPARAMETER._serialized_start = 9129
    _AXPYPARAMETER._serialized_end = 9144
    _UPSAMPLEPARAMETER._serialized_start = 9146
    _UPSAMPLEPARAMETER._serialized_end = 9183
    _SWISHPARAMETER._serialized_start = 9185
    _SWISHPARAMETER._serialized_end = 9218
    _MISHPARAMETER._serialized_start = 9220
    _MISHPARAMETER._serialized_end = 9334
    _MISHPARAMETER_ENGINE._serialized_start = 9291
    _MISHPARAMETER_ENGINE._serialized_end = 9334
    _REORGPARAMETER._serialized_start = 9336
    _REORGPARAMETER._serialized_end = 9392
    _REVERSEPARAMETER._serialized_start = 9394
    _REVERSEPARAMETER._serialized_end = 9429
    _TRANSFORMATIONPARAMETER._serialized_start = 9432
    _TRANSFORMATIONPARAMETER._serialized_end = 9890
    _RESIZEPARAMETER._serialized_start = 9893
    _RESIZEPARAMETER._serialized_end = 10421
    _RESIZEPARAMETER_RESIZE_MODE._serialized_start = 10215
    _RESIZEPARAMETER_RESIZE_MODE._serialized_end = 10286
    _RESIZEPARAMETER_PAD_MODE._serialized_start = 10288
    _RESIZEPARAMETER_PAD_MODE._serialized_end = 10346
    _RESIZEPARAMETER_INTERP_MODE._serialized_start = 10348
    _RESIZEPARAMETER_INTERP_MODE._serialized_end = 10421
    _SALTPEPPERPARAMETER._serialized_start = 10423
    _SALTPEPPERPARAMETER._serialized_end = 10480
    _NOISEPARAMETER._serialized_start = 10483
    _NOISEPARAMETER._serialized_end = 10849
    _DISTORTIONPARAMETER._serialized_start = 10852
    _DISTORTIONPARAMETER._serialized_end = 11169
    _EXPANSIONPARAMETER._serialized_start = 11171
    _EXPANSIONPARAMETER._serialized_end = 11237
    _LOSSPARAMETER._serialized_start = 11240
    _LOSSPARAMETER._serialized_end = 11434
    _LOSSPARAMETER_NORMALIZATIONMODE._serialized_start = 11368
    _LOSSPARAMETER_NORMALIZATIONMODE._serialized_end = 11434
    _ACCURACYPARAMETER._serialized_start = 11436
    _ACCURACYPARAMETER._serialized_end = 11512
    _ANNOTATEDDATAPARAMETER._serialized_start = 11515
    _ANNOTATEDDATAPARAMETER._serialized_end = 11664
    _ARGMAXPARAMETER._serialized_start = 11666
    _ARGMAXPARAMETER._serialized_end = 11743
    _CONCATPARAMETER._serialized_start = 11745
    _CONCATPARAMETER._serialized_end = 11802
    _BATCHNORMPARAMETER._serialized_start = 11804
    _BATCHNORMPARAMETER._serialized_end = 11910
    _BIASPARAMETER._serialized_start = 11912
    _BIASPARAMETER._serialized_end = 12005
    _CONTRASTIVELOSSPARAMETER._serialized_start = 12007
    _CONTRASTIVELOSSPARAMETER._serialized_end = 12083
    _CONVOLUTIONPARAMETER._serialized_start = 12086
    _CONVOLUTIONPARAMETER._serialized_end = 12594
    _CONVOLUTIONPARAMETER_ENGINE._serialized_start = 9291
    _CONVOLUTIONPARAMETER_ENGINE._serialized_end = 9334
    _CROPPARAMETER._serialized_start = 12596
    _CROPPARAMETER._serialized_end = 12644
    _DATAPARAMETER._serialized_start = 12647
    _DATAPARAMETER._serialized_end = 12939
    _DATAPARAMETER_DB._serialized_start = 12912
    _DATAPARAMETER_DB._serialized_end = 12939
    _DETECTIONEVALUATEPARAMETER._serialized_start = 12942
    _DETECTIONEVALUATEPARAMETER._serialized_end = 13162
    _NONMAXIMUMSUPPRESSIONPARAMETER._serialized_start = 13164
    _NONMAXIMUMSUPPRESSIONPARAMETER._serialized_end = 13255
    _SAVEOUTPUTPARAMETER._serialized_start = 13258
    _SAVEOUTPUTPARAMETER._serialized_end = 13474
    _DETECTIONOUTPUTPARAMETER._serialized_start = 13477
    _DETECTIONOUTPUTPARAMETER._serialized_end = 13932
    _DROPOUTPARAMETER._serialized_start = 13934
    _DROPOUTPARAMETER._serialized_end = 13980
    _DUMMYDATAPARAMETER._serialized_start = 13983
    _DUMMYDATAPARAMETER._serialized_end = 14143
    _ELTWISEPARAMETER._serialized_start = 14146
    _ELTWISEPARAMETER._serialized_end = 14311
    _ELTWISEPARAMETER_ELTWISEOP._serialized_start = 14272
    _ELTWISEPARAMETER_ELTWISEOP._serialized_end = 14311
    _ELUPARAMETER._serialized_start = 14313
    _ELUPARAMETER._serialized_end = 14345
    _EMBEDPARAMETER._serialized_start = 14348
    _EMBEDPARAMETER._serialized_end = 14520
    _EXPPARAMETER._serialized_start = 14522
    _EXPPARAMETER._serialized_end = 14590
    _FLATTENPARAMETER._serialized_start = 14592
    _FLATTENPARAMETER._serialized_end = 14649
    _HDF5DATAPARAMETER._serialized_start = 14651
    _HDF5DATAPARAMETER._serialized_end = 14730
    _HDF5OUTPUTPARAMETER._serialized_start = 14732
    _HDF5OUTPUTPARAMETER._serialized_end = 14772
    _HINGELOSSPARAMETER._serialized_start = 14774
    _HINGELOSSPARAMETER._serialized_end = 14868
    _HINGELOSSPARAMETER_NORM._serialized_start = 14846
    _HINGELOSSPARAMETER_NORM._serialized_end = 14868
    _IMAGEDATAPARAMETER._serialized_start = 14871
    _IMAGEDATAPARAMETER._serialized_end = 15150
    _INFOGAINLOSSPARAMETER._serialized_start = 15152
    _INFOGAINLOSSPARAMETER._serialized_end = 15191
    _INNERPRODUCTPARAMETER._serialized_start = 15194
    _INNERPRODUCTPARAMETER._serialized_end = 15397
    _INPUTPARAMETER._serialized_start = 15399
    _INPUTPARAMETER._serialized_end = 15448
    _LOGPARAMETER._serialized_start = 15450
    _LOGPARAMETER._serialized_end = 15518
    _LRNPARAMETER._serialized_start = 15521
    _LRNPARAMETER._serialized_end = 15833
    _LRNPARAMETER_NORMREGION._serialized_start = 15735
    _LRNPARAMETER_NORMREGION._serialized_end = 15788
    _LRNPARAMETER_ENGINE._serialized_start = 9291
    _LRNPARAMETER_ENGINE._serialized_end = 9334
    _MEMORYDATAPARAMETER._serialized_start = 15835
    _MEMORYDATAPARAMETER._serialized_end = 15925
    _MULTIBOXLOSSPARAMETER._serialized_start = 15928
    _MULTIBOXLOSSPARAMETER._serialized_end = 17056
    _MULTIBOXLOSSPARAMETER_LOCLOSSTYPE._serialized_start = 16869
    _MULTIBOXLOSSPARAMETER_LOCLOSSTYPE._serialized_end = 16905
    _MULTIBOXLOSSPARAMETER_CONFLOSSTYPE._serialized_start = 16907
    _MULTIBOXLOSSPARAMETER_CONFLOSSTYPE._serialized_end = 16948
    _MULTIBOXLOSSPARAMETER_MATCHTYPE._serialized_start = 16950
    _MULTIBOXLOSSPARAMETER_MATCHTYPE._serialized_end = 16996
    _MULTIBOXLOSSPARAMETER_MININGTYPE._serialized_start = 16998
    _MULTIBOXLOSSPARAMETER_MININGTYPE._serialized_end = 17056
    _MVNPARAMETER._serialized_start = 17058
    _MVNPARAMETER._serialized_end = 17158
    _NORMALIZEPARAMETER._serialized_start = 17161
    _NORMALIZEPARAMETER._serialized_end = 17307
    _PARAMETERPARAMETER._serialized_start = 17309
    _PARAMETERPARAMETER._serialized_end = 17362
    _PERMUTEPARAMETER._serialized_start = 17364
    _PERMUTEPARAMETER._serialized_end = 17397
    _POOLINGPARAMETER._serialized_start = 17400
    _POOLINGPARAMETER._serialized_end = 17913
    _POOLINGPARAMETER_POOLMETHOD._serialized_start = 17788
    _POOLINGPARAMETER_POOLMETHOD._serialized_end = 17834
    _POOLINGPARAMETER_ENGINE._serialized_start = 9291
    _POOLINGPARAMETER_ENGINE._serialized_end = 9334
    _POOLINGPARAMETER_ROUNDMODE._serialized_start = 17881
    _POOLINGPARAMETER_ROUNDMODE._serialized_end = 17913
    _POWERPARAMETER._serialized_start = 17915
    _POWERPARAMETER._serialized_end = 17985
    _PRIORBOXPARAMETER._serialized_start = 17988
    _PRIORBOXPARAMETER._serialized_end = 18297
    _PRIORBOXPARAMETER_CODETYPE._serialized_start = 18241
    _PRIORBOXPARAMETER_CODETYPE._serialized_end = 18297
    _PROPOSALPARAMETER._serialized_start = 18300
    _PROPOSALPARAMETER._serialized_end = 18500
    _PYTHONPARAMETER._serialized_start = 18502
    _PYTHONPARAMETER._serialized_end = 18605
    _RECURRENTPARAMETER._serialized_start = 18608
    _RECURRENTPARAMETER._serialized_end = 18800
    _REDUCTIONPARAMETER._serialized_start = 18803
    _REDUCTIONPARAMETER._serialized_end = 18976
    _REDUCTIONPARAMETER_REDUCTIONOP._serialized_start = 18923
    _REDUCTIONPARAMETER_REDUCTIONOP._serialized_end = 18976
    _RELUPARAMETER._serialized_start = 18979
    _RELUPARAMETER._serialized_end = 19120
    _RELUPARAMETER_ENGINE._serialized_start = 9291
    _RELUPARAMETER_ENGINE._serialized_end = 9334
    _RESHAPEPARAMETER._serialized_start = 19122
    _RESHAPEPARAMETER._serialized_end = 19212
    _ROIALIGNPARAMETER._serialized_start = 19214
    _ROIALIGNPARAMETER._serialized_end = 19328
    _SCALEPARAMETER._serialized_start = 19331
    _SCALEPARAMETER._serialized_end = 19496
    _SIGMOIDPARAMETER._serialized_start = 19498
    _SIGMOIDPARAMETER._serialized_end = 19618
    _SIGMOIDPARAMETER_ENGINE._serialized_start = 9291
    _SIGMOIDPARAMETER_ENGINE._serialized_end = 9334
    _SLICEPARAMETER._serialized_start = 19620
    _SLICEPARAMETER._serialized_end = 19696
    _SOFTMAXPARAMETER._serialized_start = 19699
    _SOFTMAXPARAMETER._serialized_end = 19836
    _SOFTMAXPARAMETER_ENGINE._serialized_start = 9291
    _SOFTMAXPARAMETER_ENGINE._serialized_end = 9334
    _TANHPARAMETER._serialized_start = 19838
    _TANHPARAMETER._serialized_end = 19952
    _TANHPARAMETER_ENGINE._serialized_start = 9291
    _TANHPARAMETER_ENGINE._serialized_end = 9334
    _TILEPARAMETER._serialized_start = 19954
    _TILEPARAMETER._serialized_end = 20001
    _THRESHOLDPARAMETER._serialized_start = 20003
    _THRESHOLDPARAMETER._serialized_end = 20045
    _VIDEODATAPARAMETER._serialized_start = 20048
    _VIDEODATAPARAMETER._serialized_end = 20235
    _VIDEODATAPARAMETER_VIDEOTYPE._serialized_start = 20201
    _VIDEODATAPARAMETER_VIDEOTYPE._serialized_end = 20235
    _WINDOWDATAPARAMETER._serialized_start = 20238
    _WINDOWDATAPARAMETER._serialized_end = 20559
    _SPPPARAMETER._serialized_start = 20562
    _SPPPARAMETER._serialized_end = 20797
    _SPPPARAMETER_POOLMETHOD._serialized_start = 17788
    _SPPPARAMETER_POOLMETHOD._serialized_end = 17834
    _SPPPARAMETER_ENGINE._serialized_start = 9291
    _SPPPARAMETER_ENGINE._serialized_end = 9334
    _V1LAYERPARAMETER._serialized_start = 20800
    _V1LAYERPARAMETER._serialized_end = 23392
    _V1LAYERPARAMETER_LAYERTYPE._serialized_start = 22734
    _V1LAYERPARAMETER_LAYERTYPE._serialized_end = 23348
    _V1LAYERPARAMETER_DIMCHECKMODE._serialized_start = 4148
    _V1LAYERPARAMETER_DIMCHECKMODE._serialized_end = 4190
    _V0LAYERPARAMETER._serialized_start = 23395
    _V0LAYERPARAMETER._serialized_end = 24416
    _V0LAYERPARAMETER_POOLMETHOD._serialized_start = 17788
    _V0LAYERPARAMETER_POOLMETHOD._serialized_end = 17834
    _PRELUPARAMETER._serialized_start = 24418
    _PRELUPARAMETER._serialized_end = 24505
# @@protoc_insertion_point(module_scope)
